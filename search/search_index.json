{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Stuff I Find Useful A simple, static site containing various info I find useful. If someone else finds it also useful -- great! However I offer no guarantees of its applicability to anyone else. \u26a0\ufe0f Use at your own risk! . This page is rendered to this github pages site: https://travisseymour.github.io/useful_stuff/","title":"Home"},{"location":"#stuff-i-find-useful","text":"A simple, static site containing various info I find useful. If someone else finds it also useful -- great! However I offer no guarantees of its applicability to anyone else. \u26a0\ufe0f Use at your own risk! . This page is rendered to this github pages site: https://travisseymour.github.io/useful_stuff/","title":"Stuff I Find Useful"},{"location":"clear_github_project_history/","text":"How to nuke the history and end up with a single-commit branch still called main . Preflight # 0) Be on latest and clean git fetch origin git checkout main git pull git status # should say \"working tree clean\" # 1) Make a local backup of current main (easy rollback) git branch backup-main main # (Optional but safer) make a mirror backup outside the repo: # git clone --mirror git@github.com:YOU/REPO.git REPO-backup.git Create a fresh, history-free commit # 2) Create an orphan branch (no parents / no history) git checkout --orphan clean-main # 3) Stage and commit the current snapshot # git add -A # ** NOT A GOOD IDEA, OLD STUFF SHOULD ALREADY BE STAGED ** git commit -m \"Initial public release\" Replace local main with the clean history # 4) Remove the old local main (we have backup-main if needed) git branch -D main # 5) Rename the clean branch to 'main' git branch -m clean-main main Force-push to overwrite remote main # 6) Push and replace origin/main with your single commit git push -u origin main --force Your repo now appears to have started today with one commit, and the branch name remains main . Optional cleanups / checks (do these right after) Tags : If you\u2019ve ever pushed tags pointing to old commits, consider deleting them so they don\u2019t expose old history: bash git tag # inspect # delete locally git tag -d TAGNAME # delete on remote git push origin :refs/tags/TAGNAME * Other branches : Delete any other branches (local/remote) that carry old history: bash git branch # local git branch -D old-branch git push origin --delete old-branch * Secrets : Rotate any credentials that have ever been committed. Assume they\u2019re compromised once the repo goes public. * License & docs : Add LICENSE , README , SECURITY.md , etc. * Make public : On GitHub \u2192 Settings \u2192 Change visibility \u2192 Public. If you paste your git branch --all output, I can tell you exactly which branches/tags you should delete (if any) before you flip the repo to public.","title":"Clear Github Project History"},{"location":"clear_github_project_history/#how-to-nuke-the-history-and-end-up-with-a-single-commit-branch-still-called-main","text":"","title":"How to nuke the history and end up with a single-commit branch still called main."},{"location":"clear_github_project_history/#preflight","text":"# 0) Be on latest and clean git fetch origin git checkout main git pull git status # should say \"working tree clean\" # 1) Make a local backup of current main (easy rollback) git branch backup-main main # (Optional but safer) make a mirror backup outside the repo: # git clone --mirror git@github.com:YOU/REPO.git REPO-backup.git","title":"Preflight"},{"location":"clear_github_project_history/#create-a-fresh-history-free-commit","text":"# 2) Create an orphan branch (no parents / no history) git checkout --orphan clean-main # 3) Stage and commit the current snapshot # git add -A # ** NOT A GOOD IDEA, OLD STUFF SHOULD ALREADY BE STAGED ** git commit -m \"Initial public release\"","title":"Create a fresh, history-free commit"},{"location":"clear_github_project_history/#replace-local-main-with-the-clean-history","text":"# 4) Remove the old local main (we have backup-main if needed) git branch -D main # 5) Rename the clean branch to 'main' git branch -m clean-main main","title":"Replace local main with the clean history"},{"location":"clear_github_project_history/#force-push-to-overwrite-remote-main","text":"# 6) Push and replace origin/main with your single commit git push -u origin main --force Your repo now appears to have started today with one commit, and the branch name remains main .","title":"Force-push to overwrite remote main"},{"location":"clear_github_project_history/#optional-cleanups-checks-do-these-right-after","text":"Tags : If you\u2019ve ever pushed tags pointing to old commits, consider deleting them so they don\u2019t expose old history: bash git tag # inspect # delete locally git tag -d TAGNAME # delete on remote git push origin :refs/tags/TAGNAME * Other branches : Delete any other branches (local/remote) that carry old history: bash git branch # local git branch -D old-branch git push origin --delete old-branch * Secrets : Rotate any credentials that have ever been committed. Assume they\u2019re compromised once the repo goes public. * License & docs : Add LICENSE , README , SECURITY.md , etc. * Make public : On GitHub \u2192 Settings \u2192 Change visibility \u2192 Public. If you paste your git branch --all output, I can tell you exactly which branches/tags you should delete (if any) before you flip the repo to public.","title":"Optional cleanups / checks (do these right after)"},{"location":"debian_setup/","text":"Linux Setup and Useful Apps for Ubuntu/Debian Distros Update System Run this anytime you want to fully update your system from the terminal. go to terminal and do this sudo apt update -y && sudo apt upgrade -y && sudo apt autoremove Update Drivers Linux Mint sudo apt update && sudo apt full-upgrade -y # Driver Manager (pick NVIDIA/prop if needed) sudo mintdrivers If you end up installing any drivers from that, it could be wise to reboot sudo reboot Install the Ubuntu Driver Collection sudo apt install -y ubuntu-drivers-common sudo ubuntu-drivers install sudo reboot Install Nvidia Drive \u26a0\ufe0f Only do this if you have an NVidia GPU! sudo apt install -y nvidia-driver Install Multimedia Support sudo apt install -y mint-meta-codecs sudo apt install -y libavcodec-extra vlc Improve Battery & Power Management (Approach 1) \u26a0\ufe0f Only do this if you're setting up a laptop sudo apt install -y tlp tlp-rdw sudo systemctl enable --now tlp Improve Battery & Power Management (Approach 2 - May manage both battery life and cpu power monitoring, unlike tlp, which foces on battery) \u26a0\ufe0f Only do this if you're setting up a laptop Uninstall tlp, if it's installed sudo apt autoremove tlp Install auto-cpufreq git clone https://github.com/AdnanHodzic/auto-cpufreq.git cd auto-cpufreq && sudo ./auto-cpufreq-installer Install GNOME Customizations \u26a0\ufe0f Only if you are using GNOME and your distro is missing this stuff. Install gnome-tweaks and gnome-shell-extension-manager sudo apt install -y gnome-tweaks gnome-shell-extension-manager Restore Dock Features (only required on some distros) Dash To Dock Tray Icons Install uv tool installer and Python manager Everyone needs this! It's how I manage Python and Various Apps Download & run installer curl -LsSf https://astral.sh/uv/install.sh | sh Ensure uv is on PATH for this session export PATH=\"$HOME/.local/bin:$PATH\" Preparation for Virtualization sudo apt install -y qemu-kvm libvirt-daemon-system virt-manager sudo usermod -aG libvirt,kvm $USER sudo apt install -y gnome-boxes sudo apt install -y virtualbox Now log out and back in to set virtualization group membership Post Virtual Machine Install (GNOME-Boxes) Linux VMs After you install a linux distro as a guest VM, you may need to install the spice system to get proper integration and desktop resizing: # Inside the Linux VM sudo apt update -y sudo apt install spice-vdagent qemu-guest-agent -y reboot With Boxes, Cinnamon (e.g., Linux Mint) doesn't work properly with spice. So BEFORE running the above command , switch to the XFCE destkop. sudo apt install mint-meta-xfce -y After running the above command: 1) Log out of Cinnamon, 2) Choose the Xfce desktop, 3) Log back in, 4) Run the above commands. Windows VMs...tba Audio sanity tools Useful if something goes wrong with your audio system sudo apt install -y pavucontrol Install Some Printer stuff These are already installed installed on Linux Mint! Printing (CUPS) + driverless USB printing support sudo apt install -y cups ipp-usb system-config-printer sudo systemctl enable --now cups ipp-usb # (optional) allow your user to manage printers sudo usermod -aG lpadmin \"$USER\" Scanning sudo apt install -y simple-scan sane-airscan sane-utils Install Microsoft fonts Install MS fonts, many applications and previous documents may rely on these. sudo apt install -y ttf-mscorefonts-installer Refresh the font cache sudo fc-cache -f -v Enable Firewall Already installed on Linux Mint Turn it ON (Home profile is fine) sudo apt install -y gufw gufw Allow SMB file sharing (adjust to your LAN as needed) sudo ufw allow 445/tcp CPU Microcode (Intel) \u26a0\ufe0f Only install this if you have an Intel CPU! # Will immediately reboot! sudo apt install -y intel-microcode sudo reboot CPU Microcode (AMD) \u26a0\ufe0f Only install this if you have an AMD CPU! # Will immediately reboot! sudo apt install -y amd64-microcode sudo reboot Enable TRIM First check if it is already running systemctl status fstrim.timer If, the above step suggests TRIM is not enabled, do this: sudo systemctl enable --now fstrim.timer Install GStreamer Core sudo apt update -y && sudo apt install -y gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav Nice to Haves sudo apt install -y gstreamer1.0-plugins-good gstreamer1.0-tools gstreamer1.0-gl Optional GPU Acceleration for AMD GPU sudo apt install -y mesa-va-drivers gstreamer1.0-vaapi vainfo Optional GPU Acceleration for INTEL/NVIDIA GPU On Linux Mint -- You already have what you need! Otherwise: sudo apt update -y # Install/refresh the proprietary driver automatically sudo ubuntu-drivers autoinstall sudo reboot Install Text-To-Speech Voices eSpeak NG via Speech Dispatcher (classic & tiny but works everywhere) sudo apt update -y sudo apt install -y espeak-ng speech-dispatcher-espeak-ng spd-say \"Hello from e-Speak N.G. via Speech Dispatcher\" RHVoice (higher-quality, lightweight voices) sudo apt install -y rhvoice rhvoice-english speech-dispatcher-rhvoice spd-say -o rhvoice -l en \"Hello from R.H. Voice via Speech Dispatcher\" Install Rust Install rustup + stable toolchain curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y source \"$HOME/.cargo/env\" Install some handy Rust components rustup component add rustfmt clippy Install Many Important System Tools Includes things like access to exfat and ntfs, compatability with 7zip, java sdk, linux headers, and others. Common Stuff sudo apt install -y htop btop clang exfatprogs libu2f-udev samba-common-bin default-jdk curl wget unrar git unzip ntfs-3g p7zip-full Linux headers (then pick the right headers meta (Debian/LMDE vs Ubuntu/Mint)) # on Debian if apt-cache show linux-headers-amd64 >/dev/null 2>&1; then sudo apt install -y linux-headers-amd64 # on Ubuntu/Mint elif apt-cache show linux-headers-generic >/dev/null 2>&1; then sudo apt install -y linux-headers-generic fi Install fastfetch, but fallback to neofetch (older, arrested development) if fastfetch is not available. sudo apt install -y fastfetch || sudo apt install -y neofetch Install Essential Development Tools sudo apt install -y build-essential pkg-config libssl-dev Install Dropbox \u26a0\ufe0f Only download the one appropriate for your desktop file manager . That usually depends on which desktop type you use. Installing the correct file-manager integration will automatically pull in and install the Dropbox daemon on first run. Cinnamon (Linux Mint's Deafult Desktop) sudo apt install -y nemo-dropbox Nautilus (On GNOME Desktop) sudo apt install -y nautilus-dropbox Caja (On MATE Desktop) sudo apt install -y caja-dropbox Thunar (On Xfce Desktop) sudo apt install -y thunar-dropbox-plugin Install ffmpeg Command-line toolkit for converting, recording, and streaming audio/video in virtually any format. sudo apt install -y ffmpeg sudo apt install -y libavcodec-extra Enable Flatpak & Flathub Ensures Flatpak is installed and the Flathub repo is enabled (Mint usually has this already). sudo apt update -y sudo apt install -y flatpak flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo Install the NPM package Allows management of software built using Node. # add NodeSource repo for Node.js LTS curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - sudo apt install -y nodejs node -v npm -v Install better commandline search (fd-find) Installation: sudo apt install fd-find -y to find files with \"deploy\" (any casing) in the name that ends with \".sh\", use this: fdfind -i \"deply.*\\.sh$\" ~ Anki Flashcard App flatpak install -y flathub net.ankiweb.Anki ShortWave Radio Client Shortwave is a modern looking open source Internet Radio player for Linux desktop flatpak install flathub de.haeckerfelix.Shortwave PDF App for Viewing/Commenting/FormFilling/Signatures If none of the FOSS apps are good enough, consider PDF Studio ~~Install Okular PDF Reader~~ # Note: This installs needs to install a huge number of libraries and other files. Use PDFStudioViewer instead. # sudo apt install okular -y Install PDF Viewer (Free) mkdir -p ~/tmp_installs cd ~/tmp_installs wget https://download.qoppa.com/pdfstudioviewer/PDFStudioViewer_linux64.sh chmod +x PDFStudioViewer_linux64.sh ./PDFStudioViewer_linux64.sh Install PDF Studio ( PAID ) mkdir -p ~/tmp_installs cd ~/tmp_installs wget https://download.qoppa.com/pdfstudio/PDFStudio_linux64.sh chmod +x PDFStudioViewer_linux64.sh ./PDFStudioViewer_linux64.sh Asunder CD Ripper Supportes WAV, FLAC, OGG, MP3 AND ACC sudo apt install asunder PDF Arranger Lightweight tool to merge, split, rotate, crop, and reorder PDF pages. sudo apt install -y pdfarranger Stimulator Tool that keeps your system \u201cawake\u201d by temporarily preventing screen dimming and sleep. flatpak install -y flathub io.github.sigmasd.stimulator Pika Backup User data backup solution flatpak install -y flathub org.gnome.World.PikaBackup PicoCrypt Free, open-source disk-encryption tool. It encrypts data on the fly so files are readable only after you unlock them, and they appear as a normal mounted drive while in use. Download Debian Installer flatpak install -y flathub io.github.picocrypt.Picocrypt Private Internet Access (PIA) VPN Client wget https://installers.privateinternetaccess.com/download/pia-linux-3.6.2-08398.run chmod +x pia-linux-3.6.2-08398.run ./pia-linux-3.6.2-08398.run Mulvad VPN Client Download the Mullvad signing key sudo curl -fsSLo /usr/share/keyrings/mullvad-keyring.asc https://repository.mullvad.net/deb/mullvad-keyring.asc echo \"deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=$( dpkg --print-architecture )] https://repository.mullvad.net/deb/stable stable main\" | sudo tee /etc/apt/sources.list.d/mullvad.list sudo apt update -y sudo apt install mullvad-vpn SpeechNote A lightweight note-taking app with built-in speech recognition (voice-to-text) and (text-to-speech). flatpak install -y flathub net.mkiol.SpeechNote Elisa Music Player KDE\u2019s clean, modern music player and library manager for local audio collections. sudo apt install elisa -y Audacity Popular open-source audio recorder and multitrack editor. sudo apt install -y audacity Bitwarden Open-source password manager with end-to-end encryption. \u26a0\ufe0f You don't really need this desktop app if you mostly use Bitwarden in your browser. flatpak install -y flathub com.bitwarden.desktop BleachBit System cleaner that frees disk space and removes traces. sudo apt install -y bleachbit Boxy SVG User-friendly SVG vector editor optimized for UI/web graphics. flatpak install -y flathub com.boxy\\_svg.BoxySVG Brasero Disc Burner Simple CD/DVD burning application for creating data and audio discs. sudo apt install -y brasero draw.io / diagrams.net Full-featured diagramming tool for flowcharts, UML, mind maps, and more. flatpak install -y flathub com.jgraph.drawio.desktop EasyTAG Audio tag editor that quickly fixes and organizes music metadata. sudo apt install -y easytag Eyedropper Handy color picker for grabbing and managing colors from your screen. flatpak install -y flathub com.github.finefindus.eyedropper Filelight Sunburst-style disk usage viewer to find large folders and files fast. sudo apt install -y filelight Fluent Reader Modern, cross-platform RSS reader with a clean, distraction-free UI. flatpak install -y flathub me.hyliu.fluentreader Flatseal GUI to review and adjust Flatpak app permissions per application. flatpak install -y flathub com.github.tchx84.Flatseal GIMP Powerful raster graphics editor for photo retouching and image creation. sudo apt install -y gimp GPU Screen Recorder Low-overhead screen recorder leveraging GPU encoders for high performance. flatpak install -y flathub com.dec05eba.gpu\\_screen\\_recorder GPU Viewer Shows detailed OpenGL/Vulkan/Mesa/driver information for your system. flatpak install -y flathub io.github.arunsivaramanneo.GPUViewer Inkscape Professional-grade vector graphics editor ideal for logos and illustrations. sudo apt install -y inkscape JASP (Statistics) Easy-to-use statistical analysis suite with APA-style outputs and plots. flatpak install -y flathub org.jaspstats.JASP Jamovi (Statistics) Free, open-source statistical spreadsheet and analysis suite (SPSS-like) with R-based add-ons; the official Linux build is distributed via Flathub. flatpak install -y flathub org.jamovi.jamovi K3b Disc Burner Feature-rich disc authoring tool for CDs, DVDs, and Blu-ray. sudo apt install -y k3b Kooha Minimal screen recording app with a simple, elegant GNOME-style UI. flatpak install -y flathub io.github.seadve.Kooha LocalSend Share files securely over your local network without the internet or cloud. flatpak install -y flathub org.localsend.localsend\\_app OnionShare Share files, host websites, and chat securely over Tor. System (Debian) Installer: Installs a lot of stuff, maybe consider the flatpak version instead? sudo apt install -y onionshare Flatpak Installer: sudo flatpak install -y onionshare LosslessCut Ultra-fast lossless video/audio trimming, splitting, and merging. flatpak install -y flathub no.mifi.losslesscut MakeMKV Rips DVDs/Blu-rays to high-quality MKV files while preserving most metadata. Add the MakeMKV beta PPA and install sudo add-apt-repository -y ppa\\:heyarje/makemkv-beta sudo apt update -y sudo apt install -y makemkv-oss makemkv-bin Meld (Diff/Merge) Visual diff and merge tool for comparing files and directories. sudo apt install -y meld Mullvad Browser Privacy-focused web browser with anti-tracking and fingerprinting defenses. \u26a0\ufe0f It won't run unless there is an active VPN! Download the Mullvad signing key sudo curl -fsSLo /usr/share/keyrings/mullvad-keyring.asc https://repository.mullvad.net/deb/mullvad-keyring.asc Add the Mullvad repository server to apt echo \"deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=$( dpkg --print-architecture )] https://repository.mullvad.net/deb/stable stable main\" | sudo tee /etc/apt/sources.list.d/mullvad.list Install the package sudo apt update -y sudo apt install -y mullvad-browser MuseScore Full music notation editor and playback tool for composers and students. flatpak install -y flathub org.musescore.MuseScore MusicBrainz Picard Tag your music files using the MusicBrainz database with acoustic fingerprints. sudo apt install -y picard ONLYOFFICE Desktop Editors Full office suite for text documents, spreadsheets, and presentations. flatpak install -y flathub org.onlyoffice.desktopeditors Peruse Comic book reader supporting CBZ/CBR/PDF with a library view. flatpak install -y org.kde.peruse Transmission Lightweight, reliable BitTorrent client with a clean interface. This is already installed on Linux Mint sudo apt install -y transmission-gtk VLC Swiss-army-knife media player with wide codec support and streaming tools. sudo apt install -y vlc VSCodium Install telemetry-free build of VS Code from upstream open-source sources. Import the GPG key wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg | \\ gpg --dearmor | sudo tee /usr/share/keyrings/vscodium.gpg > /dev/null Add the VSCodium repository (Mint 22.1 = Ubuntu 24.04 base = \"noble\") echo 'deb [signed-by=/usr/share/keyrings/vscodium.gpg] https://download.vscodium.com/debs vscodium main' | \\ sudo tee /etc/apt/sources.list.d/vscodium.list Update package lists and install VSCodium sudo apt update -y sudo apt install codium -y Change global font scaling open the Command Palette (Ctrl+Shift+P) \u2192 \u201cPreferences: Open User Settings (JSON)\u201d and add: { \"editor.fontSize\": 16, \"window.zoomLevel\": 2.0 } save and restart PyCharm Professional \u26a0\ufe0f Install: TBA Scale The Interface: Finding and editing idea.properties : Linux Mint: /.config/JetBrains/<pycharm-version>/idea.properties Windows: %USERPROFILE%\\.PyCharm<version>\\config\\idea.properties MacOS: ~/Library/Preferences/PyCharm<version>/idea.properties Scale The Interface: Edit content: Make changes # Custom UI scaling factor ide.ui.scale=1.5 Save and Restart PyCharm to see changes Zotero Reference manager for collecting, organizing, citing, and sharing research. flatpak install -y flathub org.zotero.Zotero QuickGUI Simple GUI for creating and running virtual machines using Quickemu. Add PPA & install sudo add-apt-repository -y ppa\\:flexiondotorg/quickemu sudo apt update sudo apt install -y quickgui Sublime Text 3 (not v4) Fast, extensible text editor with powerful search, multi-cursor, and plugins. \u26a0\ufe0f I only have lic for v3, so this approach forces v3. If you want the latest, look in the app store. Optional remove any Sublime apt repo you might have added earlier sudo rm -f /etc/apt/sources.list.d/sublime-text.list /etc/apt/sources.list.d/sublime-text.sources sudo rm -f /etc/apt/keyrings/sublimehq-pub.asc /usr/share/keyrings/sublimehq-archive.gpg sudo apt update -y Download Sublime Text 3 (Build 3211) .deb mkdir -p ~/tmp_installs && cd ~/tmp_installs wget -O sublime-text_3211_amd64.deb \"https://download.sublimetext.com/sublime-text_build-3211_amd64.deb\" Install it sudo apt install ./sublime-text_3211_amd64.deb -y Hold the package so apt won\u2019t upgrade it to ST4 sudo apt-mark hold sublime-text apt-mark showhold Pulsar text editor Install Editor # You have to go to the website and make sure you are linking to the latest version. # https://pulsar-edit.dev/download/ sudo apt install https://github.com/pulsar-edit/pulsar/releases/download/v1.129.0/Linux.pulsar_1.129.0_amd64.deb Manually setup useful plugins by going to Settings->Install and installing: language-epic (singular) Sublime-Style-Column-Selection (uses Shift-LeftMouse for column select) markdown-preview markdown-pdf OR Setup useful plugins via commandline: pulsar --package install language-epic pulsar --package install Sublime-Style-Column-Selection pulsar --package install markdown-preview pulsar --package install markdown-pdf pulsar --package install termination Setup Default Font Press Ctrl/Shift/P, choose \"Application: Open Your Stylesheet\" Enter this code and save (takes place immediately) // Editor text font size atom-text-editor { font-size: 19px; // <- change this value as needed line-height: 1.6; font-family: \"Fira Code\", monospace; } // Project tree sidebar (Tree View) .tree-view { font-size: 19px; font-family: \"Fira Code\", monospace; line-height: 1.5; } // Markdown Preview pane (doesn't seek to have any effect) .markdown-preview { font-size: 19px; line-height: 1.6; padding: 1em; } Zoom Video conferencing client with screen sharing and breakout rooms. flatpak install -y flathub us.zoom.Zoom SimpleScreenRecorder Feature-rich screen recorder with live preview and fine-grained control. sudo apt install -y simplescreenrecorder GPT4All Desktop app for running and managing local LLMs on your machine. flatpak install -y flathub io.gpt4all.gpt4all KDiskMark Cross-platform disk benchmarking utility inspired by CrystalDiskMark. sudo apt install -y kdiskmark AppImage Pool Browse, download, and manage AppImages from a convenient catalog. flatpak install -y flathub io.github.prateekmedia.appimagepool OBS Studio Free, open-source live streaming and screen recording app with scenes/sources and hardware encoding (NVENC/VAAPI) when drivers are installed. sudo apt install -y obs-studio (Optional, \u26a0\ufe0f Ubuntu-based Mint Only) Use the official OBS PPA for newer versions sudo add-apt-repository -y ppa:obsproject/obs-studio sudo apt update -y sudo apt install -y obs-studio (Optional) Enable Virtual Camera (so OBS appears as a webcam) sudo apt install -y v4l2loopback-dkms sudo modprobe v4l2loopback devices=1 video_nr=10 card_label=\"OBS Virtual Camera\" exclusive_caps=1","title":"Debian Linux Setup"},{"location":"debian_setup/#linux-setup-and-useful-apps-for-ubuntudebian-distros","text":"","title":"Linux Setup and Useful Apps for Ubuntu/Debian Distros"},{"location":"debian_setup/#update-system","text":"Run this anytime you want to fully update your system from the terminal. go to terminal and do this sudo apt update -y && sudo apt upgrade -y && sudo apt autoremove","title":"Update System"},{"location":"debian_setup/#update-drivers-linux-mint","text":"sudo apt update && sudo apt full-upgrade -y # Driver Manager (pick NVIDIA/prop if needed) sudo mintdrivers If you end up installing any drivers from that, it could be wise to reboot sudo reboot","title":"Update Drivers Linux Mint"},{"location":"debian_setup/#install-the-ubuntu-driver-collection","text":"sudo apt install -y ubuntu-drivers-common sudo ubuntu-drivers install sudo reboot","title":"Install the Ubuntu Driver Collection"},{"location":"debian_setup/#install-nvidia-drive","text":"\u26a0\ufe0f Only do this if you have an NVidia GPU! sudo apt install -y nvidia-driver","title":"Install Nvidia Drive"},{"location":"debian_setup/#install-multimedia-support","text":"sudo apt install -y mint-meta-codecs sudo apt install -y libavcodec-extra vlc","title":"Install Multimedia Support"},{"location":"debian_setup/#improve-battery-power-management-approach-1","text":"\u26a0\ufe0f Only do this if you're setting up a laptop sudo apt install -y tlp tlp-rdw sudo systemctl enable --now tlp","title":"Improve Battery &amp; Power Management (Approach 1)"},{"location":"debian_setup/#improve-battery-power-management-approach-2-may-manage-both-battery-life-and-cpu-power-monitoring-unlike-tlp-which-foces-on-battery","text":"\u26a0\ufe0f Only do this if you're setting up a laptop Uninstall tlp, if it's installed sudo apt autoremove tlp Install auto-cpufreq git clone https://github.com/AdnanHodzic/auto-cpufreq.git cd auto-cpufreq && sudo ./auto-cpufreq-installer","title":"Improve Battery &amp; Power Management (Approach 2 - May manage both battery life and cpu power monitoring, unlike tlp, which foces on battery)"},{"location":"debian_setup/#install-gnome-customizations","text":"\u26a0\ufe0f Only if you are using GNOME and your distro is missing this stuff. Install gnome-tweaks and gnome-shell-extension-manager sudo apt install -y gnome-tweaks gnome-shell-extension-manager Restore Dock Features (only required on some distros) Dash To Dock Tray Icons","title":"Install GNOME Customizations"},{"location":"debian_setup/#install-uv-tool-installer-and-python-manager","text":"Everyone needs this! It's how I manage Python and Various Apps Download & run installer curl -LsSf https://astral.sh/uv/install.sh | sh Ensure uv is on PATH for this session export PATH=\"$HOME/.local/bin:$PATH\"","title":"Install uv tool installer and Python manager"},{"location":"debian_setup/#preparation-for-virtualization","text":"sudo apt install -y qemu-kvm libvirt-daemon-system virt-manager sudo usermod -aG libvirt,kvm $USER sudo apt install -y gnome-boxes sudo apt install -y virtualbox Now log out and back in to set virtualization group membership","title":"Preparation for Virtualization"},{"location":"debian_setup/#post-virtual-machine-install-gnome-boxes","text":"Linux VMs After you install a linux distro as a guest VM, you may need to install the spice system to get proper integration and desktop resizing: # Inside the Linux VM sudo apt update -y sudo apt install spice-vdagent qemu-guest-agent -y reboot With Boxes, Cinnamon (e.g., Linux Mint) doesn't work properly with spice. So BEFORE running the above command , switch to the XFCE destkop. sudo apt install mint-meta-xfce -y After running the above command: 1) Log out of Cinnamon, 2) Choose the Xfce desktop, 3) Log back in, 4) Run the above commands. Windows VMs...tba","title":"Post Virtual Machine Install (GNOME-Boxes)"},{"location":"debian_setup/#audio-sanity-tools","text":"Useful if something goes wrong with your audio system sudo apt install -y pavucontrol","title":"Audio sanity tools"},{"location":"debian_setup/#install-some-printer-stuff","text":"These are already installed installed on Linux Mint! Printing (CUPS) + driverless USB printing support sudo apt install -y cups ipp-usb system-config-printer sudo systemctl enable --now cups ipp-usb # (optional) allow your user to manage printers sudo usermod -aG lpadmin \"$USER\" Scanning sudo apt install -y simple-scan sane-airscan sane-utils","title":"Install Some Printer stuff"},{"location":"debian_setup/#install-microsoft-fonts","text":"Install MS fonts, many applications and previous documents may rely on these. sudo apt install -y ttf-mscorefonts-installer Refresh the font cache sudo fc-cache -f -v","title":"Install Microsoft fonts"},{"location":"debian_setup/#enable-firewall","text":"Already installed on Linux Mint Turn it ON (Home profile is fine) sudo apt install -y gufw gufw Allow SMB file sharing (adjust to your LAN as needed) sudo ufw allow 445/tcp","title":"Enable Firewall"},{"location":"debian_setup/#cpu-microcode-intel","text":"\u26a0\ufe0f Only install this if you have an Intel CPU! # Will immediately reboot! sudo apt install -y intel-microcode sudo reboot","title":"CPU Microcode (Intel)"},{"location":"debian_setup/#cpu-microcode-amd","text":"\u26a0\ufe0f Only install this if you have an AMD CPU! # Will immediately reboot! sudo apt install -y amd64-microcode sudo reboot","title":"CPU Microcode (AMD)"},{"location":"debian_setup/#enable-trim","text":"First check if it is already running systemctl status fstrim.timer If, the above step suggests TRIM is not enabled, do this: sudo systemctl enable --now fstrim.timer","title":"Enable TRIM"},{"location":"debian_setup/#install-gstreamer","text":"Core sudo apt update -y && sudo apt install -y gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav Nice to Haves sudo apt install -y gstreamer1.0-plugins-good gstreamer1.0-tools gstreamer1.0-gl Optional GPU Acceleration for AMD GPU sudo apt install -y mesa-va-drivers gstreamer1.0-vaapi vainfo Optional GPU Acceleration for INTEL/NVIDIA GPU On Linux Mint -- You already have what you need! Otherwise: sudo apt update -y # Install/refresh the proprietary driver automatically sudo ubuntu-drivers autoinstall sudo reboot","title":"Install GStreamer"},{"location":"debian_setup/#install-text-to-speech-voices","text":"eSpeak NG via Speech Dispatcher (classic & tiny but works everywhere) sudo apt update -y sudo apt install -y espeak-ng speech-dispatcher-espeak-ng spd-say \"Hello from e-Speak N.G. via Speech Dispatcher\" RHVoice (higher-quality, lightweight voices) sudo apt install -y rhvoice rhvoice-english speech-dispatcher-rhvoice spd-say -o rhvoice -l en \"Hello from R.H. Voice via Speech Dispatcher\"","title":"Install Text-To-Speech Voices"},{"location":"debian_setup/#install-rust","text":"Install rustup + stable toolchain curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y source \"$HOME/.cargo/env\" Install some handy Rust components rustup component add rustfmt clippy","title":"Install Rust"},{"location":"debian_setup/#install-many-important-system-tools","text":"Includes things like access to exfat and ntfs, compatability with 7zip, java sdk, linux headers, and others. Common Stuff sudo apt install -y htop btop clang exfatprogs libu2f-udev samba-common-bin default-jdk curl wget unrar git unzip ntfs-3g p7zip-full Linux headers (then pick the right headers meta (Debian/LMDE vs Ubuntu/Mint)) # on Debian if apt-cache show linux-headers-amd64 >/dev/null 2>&1; then sudo apt install -y linux-headers-amd64 # on Ubuntu/Mint elif apt-cache show linux-headers-generic >/dev/null 2>&1; then sudo apt install -y linux-headers-generic fi Install fastfetch, but fallback to neofetch (older, arrested development) if fastfetch is not available. sudo apt install -y fastfetch || sudo apt install -y neofetch","title":"Install Many Important System Tools"},{"location":"debian_setup/#install-essential-development-tools","text":"sudo apt install -y build-essential pkg-config libssl-dev","title":"Install Essential Development Tools"},{"location":"debian_setup/#install-dropbox","text":"\u26a0\ufe0f Only download the one appropriate for your desktop file manager . That usually depends on which desktop type you use. Installing the correct file-manager integration will automatically pull in and install the Dropbox daemon on first run. Cinnamon (Linux Mint's Deafult Desktop) sudo apt install -y nemo-dropbox Nautilus (On GNOME Desktop) sudo apt install -y nautilus-dropbox Caja (On MATE Desktop) sudo apt install -y caja-dropbox Thunar (On Xfce Desktop) sudo apt install -y thunar-dropbox-plugin","title":"Install Dropbox"},{"location":"debian_setup/#install-ffmpeg","text":"Command-line toolkit for converting, recording, and streaming audio/video in virtually any format. sudo apt install -y ffmpeg sudo apt install -y libavcodec-extra","title":"Install ffmpeg"},{"location":"debian_setup/#enable-flatpak-flathub","text":"Ensures Flatpak is installed and the Flathub repo is enabled (Mint usually has this already). sudo apt update -y sudo apt install -y flatpak flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo","title":"Enable Flatpak &amp; Flathub"},{"location":"debian_setup/#install-the-npm-package","text":"Allows management of software built using Node. # add NodeSource repo for Node.js LTS curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - sudo apt install -y nodejs node -v npm -v","title":"Install the NPM package"},{"location":"debian_setup/#install-better-commandline-search-fd-find","text":"Installation: sudo apt install fd-find -y to find files with \"deploy\" (any casing) in the name that ends with \".sh\", use this: fdfind -i \"deply.*\\.sh$\" ~","title":"Install better commandline search (fd-find)"},{"location":"debian_setup/#anki","text":"Flashcard App flatpak install -y flathub net.ankiweb.Anki","title":"Anki"},{"location":"debian_setup/#shortwave-radio-client","text":"Shortwave is a modern looking open source Internet Radio player for Linux desktop flatpak install flathub de.haeckerfelix.Shortwave","title":"ShortWave Radio Client"},{"location":"debian_setup/#pdf-app-for-viewingcommentingformfillingsignatures","text":"If none of the FOSS apps are good enough, consider PDF Studio ~~Install Okular PDF Reader~~ # Note: This installs needs to install a huge number of libraries and other files. Use PDFStudioViewer instead. # sudo apt install okular -y Install PDF Viewer (Free) mkdir -p ~/tmp_installs cd ~/tmp_installs wget https://download.qoppa.com/pdfstudioviewer/PDFStudioViewer_linux64.sh chmod +x PDFStudioViewer_linux64.sh ./PDFStudioViewer_linux64.sh Install PDF Studio ( PAID ) mkdir -p ~/tmp_installs cd ~/tmp_installs wget https://download.qoppa.com/pdfstudio/PDFStudio_linux64.sh chmod +x PDFStudioViewer_linux64.sh ./PDFStudioViewer_linux64.sh","title":"PDF App for Viewing/Commenting/FormFilling/Signatures"},{"location":"debian_setup/#asunder-cd-ripper","text":"Supportes WAV, FLAC, OGG, MP3 AND ACC sudo apt install asunder","title":"Asunder CD Ripper"},{"location":"debian_setup/#pdf-arranger","text":"Lightweight tool to merge, split, rotate, crop, and reorder PDF pages. sudo apt install -y pdfarranger","title":"PDF Arranger"},{"location":"debian_setup/#stimulator","text":"Tool that keeps your system \u201cawake\u201d by temporarily preventing screen dimming and sleep. flatpak install -y flathub io.github.sigmasd.stimulator","title":"Stimulator"},{"location":"debian_setup/#pika-backup","text":"User data backup solution flatpak install -y flathub org.gnome.World.PikaBackup","title":"Pika Backup"},{"location":"debian_setup/#picocrypt","text":"Free, open-source disk-encryption tool. It encrypts data on the fly so files are readable only after you unlock them, and they appear as a normal mounted drive while in use. Download Debian Installer flatpak install -y flathub io.github.picocrypt.Picocrypt","title":"PicoCrypt"},{"location":"debian_setup/#private-internet-access-pia-vpn-client","text":"wget https://installers.privateinternetaccess.com/download/pia-linux-3.6.2-08398.run chmod +x pia-linux-3.6.2-08398.run ./pia-linux-3.6.2-08398.run","title":"Private Internet Access (PIA) VPN Client"},{"location":"debian_setup/#mulvad-vpn-client","text":"Download the Mullvad signing key sudo curl -fsSLo /usr/share/keyrings/mullvad-keyring.asc https://repository.mullvad.net/deb/mullvad-keyring.asc echo \"deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=$( dpkg --print-architecture )] https://repository.mullvad.net/deb/stable stable main\" | sudo tee /etc/apt/sources.list.d/mullvad.list sudo apt update -y sudo apt install mullvad-vpn","title":"Mulvad VPN Client"},{"location":"debian_setup/#speechnote","text":"A lightweight note-taking app with built-in speech recognition (voice-to-text) and (text-to-speech). flatpak install -y flathub net.mkiol.SpeechNote","title":"SpeechNote"},{"location":"debian_setup/#elisa-music-player","text":"KDE\u2019s clean, modern music player and library manager for local audio collections. sudo apt install elisa -y","title":"Elisa Music Player"},{"location":"debian_setup/#audacity","text":"Popular open-source audio recorder and multitrack editor. sudo apt install -y audacity","title":"Audacity"},{"location":"debian_setup/#bitwarden","text":"Open-source password manager with end-to-end encryption. \u26a0\ufe0f You don't really need this desktop app if you mostly use Bitwarden in your browser. flatpak install -y flathub com.bitwarden.desktop","title":"Bitwarden"},{"location":"debian_setup/#bleachbit","text":"System cleaner that frees disk space and removes traces. sudo apt install -y bleachbit","title":"BleachBit"},{"location":"debian_setup/#boxy-svg","text":"User-friendly SVG vector editor optimized for UI/web graphics. flatpak install -y flathub com.boxy\\_svg.BoxySVG","title":"Boxy SVG"},{"location":"debian_setup/#brasero-disc-burner","text":"Simple CD/DVD burning application for creating data and audio discs. sudo apt install -y brasero","title":"Brasero Disc Burner"},{"location":"debian_setup/#drawio-diagramsnet","text":"Full-featured diagramming tool for flowcharts, UML, mind maps, and more. flatpak install -y flathub com.jgraph.drawio.desktop","title":"draw.io / diagrams.net"},{"location":"debian_setup/#easytag","text":"Audio tag editor that quickly fixes and organizes music metadata. sudo apt install -y easytag","title":"EasyTAG"},{"location":"debian_setup/#eyedropper","text":"Handy color picker for grabbing and managing colors from your screen. flatpak install -y flathub com.github.finefindus.eyedropper","title":"Eyedropper"},{"location":"debian_setup/#filelight","text":"Sunburst-style disk usage viewer to find large folders and files fast. sudo apt install -y filelight","title":"Filelight"},{"location":"debian_setup/#fluent-reader","text":"Modern, cross-platform RSS reader with a clean, distraction-free UI. flatpak install -y flathub me.hyliu.fluentreader","title":"Fluent Reader"},{"location":"debian_setup/#flatseal","text":"GUI to review and adjust Flatpak app permissions per application. flatpak install -y flathub com.github.tchx84.Flatseal","title":"Flatseal"},{"location":"debian_setup/#gimp","text":"Powerful raster graphics editor for photo retouching and image creation. sudo apt install -y gimp","title":"GIMP"},{"location":"debian_setup/#gpu-screen-recorder","text":"Low-overhead screen recorder leveraging GPU encoders for high performance. flatpak install -y flathub com.dec05eba.gpu\\_screen\\_recorder","title":"GPU Screen Recorder"},{"location":"debian_setup/#gpu-viewer","text":"Shows detailed OpenGL/Vulkan/Mesa/driver information for your system. flatpak install -y flathub io.github.arunsivaramanneo.GPUViewer","title":"GPU Viewer"},{"location":"debian_setup/#inkscape","text":"Professional-grade vector graphics editor ideal for logos and illustrations. sudo apt install -y inkscape","title":"Inkscape"},{"location":"debian_setup/#jasp-statistics","text":"Easy-to-use statistical analysis suite with APA-style outputs and plots. flatpak install -y flathub org.jaspstats.JASP","title":"JASP (Statistics)"},{"location":"debian_setup/#jamovi-statistics","text":"Free, open-source statistical spreadsheet and analysis suite (SPSS-like) with R-based add-ons; the official Linux build is distributed via Flathub. flatpak install -y flathub org.jamovi.jamovi","title":"Jamovi (Statistics)"},{"location":"debian_setup/#k3b-disc-burner","text":"Feature-rich disc authoring tool for CDs, DVDs, and Blu-ray. sudo apt install -y k3b","title":"K3b Disc Burner"},{"location":"debian_setup/#kooha","text":"Minimal screen recording app with a simple, elegant GNOME-style UI. flatpak install -y flathub io.github.seadve.Kooha","title":"Kooha"},{"location":"debian_setup/#localsend","text":"Share files securely over your local network without the internet or cloud. flatpak install -y flathub org.localsend.localsend\\_app","title":"LocalSend"},{"location":"debian_setup/#onionshare","text":"Share files, host websites, and chat securely over Tor. System (Debian) Installer: Installs a lot of stuff, maybe consider the flatpak version instead? sudo apt install -y onionshare Flatpak Installer: sudo flatpak install -y onionshare","title":"OnionShare"},{"location":"debian_setup/#losslesscut","text":"Ultra-fast lossless video/audio trimming, splitting, and merging. flatpak install -y flathub no.mifi.losslesscut","title":"LosslessCut"},{"location":"debian_setup/#makemkv","text":"Rips DVDs/Blu-rays to high-quality MKV files while preserving most metadata. Add the MakeMKV beta PPA and install sudo add-apt-repository -y ppa\\:heyarje/makemkv-beta sudo apt update -y sudo apt install -y makemkv-oss makemkv-bin","title":"MakeMKV"},{"location":"debian_setup/#meld-diffmerge","text":"Visual diff and merge tool for comparing files and directories. sudo apt install -y meld","title":"Meld (Diff/Merge)"},{"location":"debian_setup/#mullvad-browser","text":"Privacy-focused web browser with anti-tracking and fingerprinting defenses. \u26a0\ufe0f It won't run unless there is an active VPN! Download the Mullvad signing key sudo curl -fsSLo /usr/share/keyrings/mullvad-keyring.asc https://repository.mullvad.net/deb/mullvad-keyring.asc Add the Mullvad repository server to apt echo \"deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=$( dpkg --print-architecture )] https://repository.mullvad.net/deb/stable stable main\" | sudo tee /etc/apt/sources.list.d/mullvad.list Install the package sudo apt update -y sudo apt install -y mullvad-browser","title":"Mullvad Browser"},{"location":"debian_setup/#musescore","text":"Full music notation editor and playback tool for composers and students. flatpak install -y flathub org.musescore.MuseScore","title":"MuseScore"},{"location":"debian_setup/#musicbrainz-picard","text":"Tag your music files using the MusicBrainz database with acoustic fingerprints. sudo apt install -y picard","title":"MusicBrainz Picard"},{"location":"debian_setup/#onlyoffice-desktop-editors","text":"Full office suite for text documents, spreadsheets, and presentations. flatpak install -y flathub org.onlyoffice.desktopeditors","title":"ONLYOFFICE Desktop Editors"},{"location":"debian_setup/#peruse","text":"Comic book reader supporting CBZ/CBR/PDF with a library view. flatpak install -y org.kde.peruse","title":"Peruse"},{"location":"debian_setup/#transmission","text":"Lightweight, reliable BitTorrent client with a clean interface. This is already installed on Linux Mint sudo apt install -y transmission-gtk","title":"Transmission"},{"location":"debian_setup/#vlc","text":"Swiss-army-knife media player with wide codec support and streaming tools. sudo apt install -y vlc","title":"VLC"},{"location":"debian_setup/#vscodium","text":"Install telemetry-free build of VS Code from upstream open-source sources. Import the GPG key wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg | \\ gpg --dearmor | sudo tee /usr/share/keyrings/vscodium.gpg > /dev/null Add the VSCodium repository (Mint 22.1 = Ubuntu 24.04 base = \"noble\") echo 'deb [signed-by=/usr/share/keyrings/vscodium.gpg] https://download.vscodium.com/debs vscodium main' | \\ sudo tee /etc/apt/sources.list.d/vscodium.list Update package lists and install VSCodium sudo apt update -y sudo apt install codium -y Change global font scaling open the Command Palette (Ctrl+Shift+P) \u2192 \u201cPreferences: Open User Settings (JSON)\u201d and add: { \"editor.fontSize\": 16, \"window.zoomLevel\": 2.0 } save and restart","title":"VSCodium"},{"location":"debian_setup/#pycharm-professional","text":"\u26a0\ufe0f Install: TBA Scale The Interface: Finding and editing idea.properties : Linux Mint: /.config/JetBrains/<pycharm-version>/idea.properties Windows: %USERPROFILE%\\.PyCharm<version>\\config\\idea.properties MacOS: ~/Library/Preferences/PyCharm<version>/idea.properties Scale The Interface: Edit content: Make changes # Custom UI scaling factor ide.ui.scale=1.5 Save and Restart PyCharm to see changes","title":"PyCharm Professional"},{"location":"debian_setup/#zotero","text":"Reference manager for collecting, organizing, citing, and sharing research. flatpak install -y flathub org.zotero.Zotero","title":"Zotero"},{"location":"debian_setup/#quickgui","text":"Simple GUI for creating and running virtual machines using Quickemu. Add PPA & install sudo add-apt-repository -y ppa\\:flexiondotorg/quickemu sudo apt update sudo apt install -y quickgui","title":"QuickGUI"},{"location":"debian_setup/#sublime-text-3-not-v4","text":"Fast, extensible text editor with powerful search, multi-cursor, and plugins. \u26a0\ufe0f I only have lic for v3, so this approach forces v3. If you want the latest, look in the app store. Optional remove any Sublime apt repo you might have added earlier sudo rm -f /etc/apt/sources.list.d/sublime-text.list /etc/apt/sources.list.d/sublime-text.sources sudo rm -f /etc/apt/keyrings/sublimehq-pub.asc /usr/share/keyrings/sublimehq-archive.gpg sudo apt update -y Download Sublime Text 3 (Build 3211) .deb mkdir -p ~/tmp_installs && cd ~/tmp_installs wget -O sublime-text_3211_amd64.deb \"https://download.sublimetext.com/sublime-text_build-3211_amd64.deb\" Install it sudo apt install ./sublime-text_3211_amd64.deb -y Hold the package so apt won\u2019t upgrade it to ST4 sudo apt-mark hold sublime-text apt-mark showhold","title":"Sublime Text 3 (not v4)"},{"location":"debian_setup/#pulsar-text-editor","text":"Install Editor # You have to go to the website and make sure you are linking to the latest version. # https://pulsar-edit.dev/download/ sudo apt install https://github.com/pulsar-edit/pulsar/releases/download/v1.129.0/Linux.pulsar_1.129.0_amd64.deb Manually setup useful plugins by going to Settings->Install and installing: language-epic (singular) Sublime-Style-Column-Selection (uses Shift-LeftMouse for column select) markdown-preview markdown-pdf OR Setup useful plugins via commandline: pulsar --package install language-epic pulsar --package install Sublime-Style-Column-Selection pulsar --package install markdown-preview pulsar --package install markdown-pdf pulsar --package install termination Setup Default Font Press Ctrl/Shift/P, choose \"Application: Open Your Stylesheet\" Enter this code and save (takes place immediately) // Editor text font size atom-text-editor { font-size: 19px; // <- change this value as needed line-height: 1.6; font-family: \"Fira Code\", monospace; } // Project tree sidebar (Tree View) .tree-view { font-size: 19px; font-family: \"Fira Code\", monospace; line-height: 1.5; } // Markdown Preview pane (doesn't seek to have any effect) .markdown-preview { font-size: 19px; line-height: 1.6; padding: 1em; }","title":"Pulsar text editor"},{"location":"debian_setup/#zoom","text":"Video conferencing client with screen sharing and breakout rooms. flatpak install -y flathub us.zoom.Zoom","title":"Zoom"},{"location":"debian_setup/#simplescreenrecorder","text":"Feature-rich screen recorder with live preview and fine-grained control. sudo apt install -y simplescreenrecorder","title":"SimpleScreenRecorder"},{"location":"debian_setup/#gpt4all","text":"Desktop app for running and managing local LLMs on your machine. flatpak install -y flathub io.gpt4all.gpt4all","title":"GPT4All"},{"location":"debian_setup/#kdiskmark","text":"Cross-platform disk benchmarking utility inspired by CrystalDiskMark. sudo apt install -y kdiskmark","title":"KDiskMark"},{"location":"debian_setup/#appimage-pool","text":"Browse, download, and manage AppImages from a convenient catalog. flatpak install -y flathub io.github.prateekmedia.appimagepool","title":"AppImage Pool"},{"location":"debian_setup/#obs-studio","text":"Free, open-source live streaming and screen recording app with scenes/sources and hardware encoding (NVENC/VAAPI) when drivers are installed. sudo apt install -y obs-studio (Optional, \u26a0\ufe0f Ubuntu-based Mint Only) Use the official OBS PPA for newer versions sudo add-apt-repository -y ppa:obsproject/obs-studio sudo apt update -y sudo apt install -y obs-studio (Optional) Enable Virtual Camera (so OBS appears as a webcam) sudo apt install -y v4l2loopback-dkms sudo modprobe v4l2loopback devices=1 video_nr=10 card_label=\"OBS Virtual Camera\" exclusive_caps=1","title":"OBS Studio"},{"location":"fedora_stuff/","text":"Fedora Stuff Robust Install of VirutalBox on Fedora 42 Fedora + VirtualBox can be a little inconsistent..Fedora\u2019s kernel updates more quickly and VirtualBox. So do this: Make sure we have access to the RPMFusion package sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm Install VirtualBox and kernel modules sudo dnf install VirtualBox Install build dependencies sudo dnf install gcc make perl kernel-devel kernel-headers dkms Add yourself to the vboxusers group sudo usermod -aG vboxusers $USER Log out/in (or reboot) to apply. sudo akmods sudo modprobe vboxdrv # Optional # reboot now Keeping things working after Fedora kernel updates Confirm modules are rebuilt correctly, run after a kernel update: bash systemctl status akmods ERROR: VirtualBox can't enable the AMD-V extension If you see this: VirtualBox can't enable the AMD-V extension. Please disable the KVM kernel extension, recompile your kernel and reboot (VERR_SVM_IN_USE). What\u2019s happening: VirtualBox wants to use AMD-V hardware virtualization (SVM). But your host Fedora 42 already has KVM/QEMU loaded (because GNOME Boxes uses it). AMD-V / Intel VT-x can only be held by one hypervisor at a time \u2192 VirtualBox and KVM fight for it \u2192 VirtualBox fails with VERR_SVM_IN_USE . This is a classic conflict between VirtualBox vs KVM . Solutions Temporarily disable KVM modules (before running VirtualBox) Unload KVM modules from the host kernel: sudo modprobe -r kvm_amd kvm_intel kvm Then start your VirtualBox VM. \u26a0\ufe0f Downside: this breaks GNOME Boxes/virt-manager until you reboot or reload the modules: sudo modprobe kvm_amd # (or kvm_intel if Intel CPU) sudo modprobe kvm Prevent KVM from autoloading at boot (if you want to switch fully to VirtualBox) Blacklist KVM modules: echo \"blacklist kvm\" | sudo tee /etc/modprobe.d/disable-kvm.conf echo \"blacklist kvm_amd\" | sudo tee -a /etc/modprobe.d/disable-kvm.conf (or kvm_intel if Intel CPU). Then reboot. Now VirtualBox will work, but GNOME Boxes / QEMU won\u2019t. Stick with KVM/Boxes and skip VirtualBox Honestly, on Fedora the most robust hypervisor is KVM (Boxes/virt-manager) . VirtualBox is a bit of a second-class citizen on Fedora because the kernel moves so fast, and it constantly collides with KVM. If you just want Linux Mint guests, Boxes with spice-vdagent is much less painful. Installing Virt-Manager Install Virtual Machine Manager if it's not already installed sudo dnf install virt-manager Setup KDE Wallet (Needed, for example by PikaBackup) Install sudo dnf install kwallet kwalletmanager pam-kwallet libsecret Open System Settings and Check Enable the KDE wallet subsystem Check Use KWallet for the Secret Service interface (exposes the Freedesktop Secret Service that Pika expects) Log Out and Log In Open System Settings and Create a new wallet (e.g., \"kwallet\") and set a password It might seem like nothing happened, that's ok, log-out and log back in. Now Pika should allow you to create an encrypted backup.","title":"Fedora Stuff"},{"location":"fedora_stuff/#fedora-stuff","text":"","title":"Fedora Stuff"},{"location":"fedora_stuff/#robust-install-of-virutalbox-on-fedora-42","text":"Fedora + VirtualBox can be a little inconsistent..Fedora\u2019s kernel updates more quickly and VirtualBox. So do this: Make sure we have access to the RPMFusion package sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm Install VirtualBox and kernel modules sudo dnf install VirtualBox Install build dependencies sudo dnf install gcc make perl kernel-devel kernel-headers dkms Add yourself to the vboxusers group sudo usermod -aG vboxusers $USER Log out/in (or reboot) to apply. sudo akmods sudo modprobe vboxdrv # Optional # reboot now Keeping things working after Fedora kernel updates Confirm modules are rebuilt correctly, run after a kernel update: bash systemctl status akmods","title":"Robust Install of VirutalBox on Fedora 42"},{"location":"fedora_stuff/#error-virtualbox-cant-enable-the-amd-v-extension","text":"If you see this: VirtualBox can't enable the AMD-V extension. Please disable the KVM kernel extension, recompile your kernel and reboot (VERR_SVM_IN_USE).","title":"ERROR: VirtualBox can't enable the AMD-V extension"},{"location":"fedora_stuff/#whats-happening","text":"VirtualBox wants to use AMD-V hardware virtualization (SVM). But your host Fedora 42 already has KVM/QEMU loaded (because GNOME Boxes uses it). AMD-V / Intel VT-x can only be held by one hypervisor at a time \u2192 VirtualBox and KVM fight for it \u2192 VirtualBox fails with VERR_SVM_IN_USE . This is a classic conflict between VirtualBox vs KVM .","title":"What\u2019s happening:"},{"location":"fedora_stuff/#solutions","text":"Temporarily disable KVM modules (before running VirtualBox) Unload KVM modules from the host kernel: sudo modprobe -r kvm_amd kvm_intel kvm Then start your VirtualBox VM. \u26a0\ufe0f Downside: this breaks GNOME Boxes/virt-manager until you reboot or reload the modules: sudo modprobe kvm_amd # (or kvm_intel if Intel CPU) sudo modprobe kvm Prevent KVM from autoloading at boot (if you want to switch fully to VirtualBox) Blacklist KVM modules: echo \"blacklist kvm\" | sudo tee /etc/modprobe.d/disable-kvm.conf echo \"blacklist kvm_amd\" | sudo tee -a /etc/modprobe.d/disable-kvm.conf (or kvm_intel if Intel CPU). Then reboot. Now VirtualBox will work, but GNOME Boxes / QEMU won\u2019t. Stick with KVM/Boxes and skip VirtualBox Honestly, on Fedora the most robust hypervisor is KVM (Boxes/virt-manager) . VirtualBox is a bit of a second-class citizen on Fedora because the kernel moves so fast, and it constantly collides with KVM. If you just want Linux Mint guests, Boxes with spice-vdagent is much less painful.","title":"Solutions"},{"location":"fedora_stuff/#installing-virt-manager","text":"Install Virtual Machine Manager if it's not already installed sudo dnf install virt-manager","title":"Installing Virt-Manager"},{"location":"fedora_stuff/#setup-kde-wallet-needed-for-example-by-pikabackup","text":"Install sudo dnf install kwallet kwalletmanager pam-kwallet libsecret Open System Settings and Check Enable the KDE wallet subsystem Check Use KWallet for the Secret Service interface (exposes the Freedesktop Secret Service that Pika expects) Log Out and Log In Open System Settings and Create a new wallet (e.g., \"kwallet\") and set a password It might seem like nothing happened, that's ok, log-out and log back in. Now Pika should allow you to create an encrypted backup.","title":"Setup KDE Wallet (Needed, for example by PikaBackup)"},{"location":"machine_transfer/","text":"Machine Transfer Transfer Flatpak Apps This only applies to flatpak apps hosted on flathub. Apps from other sources will need to be installed from their respective remotes. Save list of flathub-based apps flatpak list --app --columns=ref,origin | awk '$2 == \"flathub\" {print $1}' > flatpaks.txt Restore flathub-based apps from list flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo xargs -a flatpaks.txt -r flatpak install -y flathub My Flatpak App List as of 9/13/25 Download as flatpaks.txt","title":"Machine Transfer"},{"location":"machine_transfer/#machine-transfer","text":"","title":"Machine Transfer"},{"location":"machine_transfer/#transfer-flatpak-apps","text":"This only applies to flatpak apps hosted on flathub. Apps from other sources will need to be installed from their respective remotes. Save list of flathub-based apps flatpak list --app --columns=ref,origin | awk '$2 == \"flathub\" {print $1}' > flatpaks.txt Restore flathub-based apps from list flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo xargs -a flatpaks.txt -r flatpak install -y flathub","title":"Transfer Flatpak Apps"},{"location":"machine_transfer/#my-flatpak-app-list-as-of-91325","text":"Download as flatpaks.txt","title":"My Flatpak App List as of 9/13/25"},{"location":"marp_stuff/","text":"My MARP FAQ What is Marp? How do you install Marp? My Marp Workflow What is Marp2PDF? Header Slides Images Videos Putting Content Into Columns Linking Slides Override Presentation Defaults Override Slide Defaults Fit Text To Slide Width Change Word or Phrase Color Change Word or Phrase Size Using Mermaid Diagrams With Marp Using Plotly Graphs With Marp Useful Websites what-is-marp | Marp (also known as the Markdown Presentation Ecosystem) provides an intuitive experience for creating beautiful slide decks. You only have to focus on writing your story in a Markdown document. I use Marp instead of Powerpoint to create presenations I use in lectures, talks, and tutorials. If you're a coder or otherwise comfortable with creating documents with plaintext (especially Markdown), then this might be for you. However, for most people, using PowerPoint or some other presenetaiton software package will be faaar easier! An easy way to get started is to use Marp via VSCode or VSCodium , but I use Marp CLI with PyCharm . Quick Overview Video: https://www.youtube.com/watch?v=EzQ-p41wNEE More about Marp Here: https://marp.app/ Quick video installing-marp Basic Setup If you want to use Marp with VSCode or VSCodium , you can find it in the normal VSCode marketplace, e.g.: Marp for VS Code If you want to use Marp with another editor or IDE (I use PyCharm becasue I already use it frequently for Python development, otherwise I'd probably use VSCodium . This means that I use use Marp-CLI (i.e., the commandline interface). You can learn more more here: Marp-CLI By far the easiest way to install Marp is to use one of the standalone binaries from the marp-cli [Releases Page]. I recommend putting the resulting Marp executable somewhere in your system Path. NOTE that if you instead use pip or npx to install Marp, it may already be on your path. Use the Marp-CLI instructions for info on how to get to the point where you can run Marp from anywhere on your system. Setup Chrome Browser for Rendering The Marp-CLI page discusses how to make sure you have chrome setup for rendering. On Ubuntu Linux (actually, I use Pop!_OS , an OS by system76 based on Ubuntu), I used these instructions: sudo add-apt-repository ppa:savoury1/chromium sudo apt update sudo apt install chromium-browser export CHROME_PATH=/usr/bin/chromium-browser marp-cli-workflow Setup For each new slideshow: create a new folder to hold the slideshow create 2 subfloders, \"images\" and \"media\" create a markdown file called \"slides.md\" create a batch file called dev.sh (mac or linux, dev.bat on windows??) and make it executable. create a batch file called make_pdf.sh (mak or linux, make_pdf.sh on windows??) and make it executable. Boilerplate for the top of slides.md --- marp: true theme: gaia # default, uncover, gaia class: invert # invert for dark mode of any theme math: mathjax footer: \"\" /* @@@@@@@@@@ You could put whatever text you want at the bottom of each slide @@@@@@@@@@@ */ html: true size: 4:3 # 16:9 4:3 etc. style: | .two_columns { display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 1rem; } .two_columns_60_40 { display: grid; grid-template-columns: 60% 40%; gap: 1rem; } .two_columns_70_30 { display: grid; grid-template-columns: 70% 30%; gap: 1rem; } .three_columns { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); gap: 1rem; } /* make sure there are spaces above and below the content, e.g.: <div class=\"centerit\"> [w:480px]('./images/my_image.png') </div> */ .centerit { display: flex; justify-content: center; align-items: center; height: 100vh; } /* small font bulleted list */ .small_list ul { font-size: 22px; } /* Watermark (after=off, before=on)*/ section::after { position: absolute; display: flex; /* Copyright text */ content: \".\"; /* @@@@@@@@@@ You could put copyright info here, or use image below @@@@@@@@@@@ */ font-size: 20px; color: #C0C0C0; padding-left: 1980px; align-items: center; /* Position and size */ left: 30px; bottom: 200px; height: 350px; /* Watermark image no-repeat or repeat */ /* THIS WILL ONLY SHOW UP IF YOU SET \"section::before\" above. to disble, use \"section::after\" */ background: url(\"./images/watermark2.png\") repeat; /* @@@@@@@@@@ I have my copyright info in this watermark image @@@@@@@@@@@ */ opacity: 0.4; /* Allow to control elements under the wa termark */ pointer-events: none; } --- Contents of dev.sh NOTE: This may need to be adjusted for Windows. NOTE: This may need to be adjusted on Macos if you are not using bash. #!/bin/bash marp -w -p --html slides.md Contents of make_pdf.sh NOTE: This may need to be adjusted for Windows. NOTE: This may need to be adjusted on Macos if you are not using bash. #!/bin/bash export CHROME_PATH=/usr/bin/chromium-browser marp --pdf --html --output=. --input-dir=. --allow-local-files # marp2pdf Development Workflow NOTE: the command in dev.sh will automatically re-create slides.html from your slides.md file (that's what the -w flag does). It will also render the current slideshow in a little window so you can see what you are doing (that's what the -p flag does). Here is my workflow: run ./dev.sh Make a change to slides.md Whenever I want to see what I've done in the preview window, I save the file (or enable auto-save for continous updates) If I want to see a full-size version in a webbrowser, I drag slides.html to my webbrowser (I use Firefox ), but I have to refresh to see any subsequent changes (which is why I prefer to use the preview window). To include images, I save them to the images folder and then refer to them as something like ./images/imagename.png To include videos, I save them to the media folder then refer to them as something like ./media/videoname.mp4 When donw editing, I cancel out of the process running ./dev.sh (e.g., using CTRL-C). To create a PDF, I run ./make_pdf.sh That's it. Making changes to my slides is as easy as editing the text in slides.md . Using My Presentations Marp renders your markdown presentation code into a working static HTML presentation. Thus, to show your presentation, just drag slides.html into your browser! I do the following: Drag slides.html into Firefox Click the Presenter's View Icon on the right side of the slide navigation bar at the bottom, which creates another webpage showing the presenter's view. I keep the presenter's view page on the primary monitor where I can see it and I drag the normal presentation window onto the external monitor so the audiene can see it. moving around in presenter's view automatically controls the audience view. Note: To show videos, you have to press start/stop/etc. on the normal presentation window. When done, just close the slideshow browser tabs and you're done. what-is-marp-to-pdf In the My Marp Workflow section, the make_pdf.sh contents has a command called marp2pdf that is commented out. What is this? Marp2PDF is a tool I wrote which does the following: looks for the file slides.md and makes a temporary copy of it edits the copy to remove any image markup that is followed with this text: <!-- nopdf --> in the watermark subsection of the style frontmatter, replaces the text section::after with section::before uses Marp-cli to re-render this temp file to slides_public.pdf uses ghostscript to do a medium-level image compressed version of the content in slides_public.pdf and saves it using the same name. The result is a considerably smaller PDF that has my watermark image repated across it and that omits images I think would be inappropriate for a public copy (e.g., copyrighted images, etc.). All of this occurs without altering either the original slides.md or the standard slides.pdf generated by Marp. Marp2PDF assumes the following: chromium-browser is installed (e.g., mine is installed at /usr/bin/chromium-browser ) ghostscript is installed (e.g., mine is installed at /usr/bin/gs ) marp-cli is installed (e.g., mine is installed at /home/[USERNAME]/Applications/marp ) Why is marp2pdf commented out in make_pdf.sh ? That's because it's not yet available publically. When it is, I'll adjust the relevant FAQs. For now, you can just use the default PDF Marp produces, or make the changes I indicated above yourself and then regenerate the PDF. header-slides I like headers largeish text over a full-slide images: ![bg](images/fullslide_background_image.png) <!-- nopdf --> # <span style=\"color:orange\"><!--fit-->My Main Title</span> ## <center>My Subtitle If Needed</center> ### <center>For Lectures, I include Course, Quarter and Year</center> images Plain markdown image spec: ![](./images/myimage.jpg) With width specified in pixels (height will be auto-computed) ![w:800px](./images/myimage.jpg) Centered Note: spaces between div tags and markdown is crucial! <div class=\"centerit\"> ![w:800px](./images/myimage.jpg) </div> Absolute positioning This allows you to place an image anywhere on the slide! Make sure you adjust the top, right, width, and height parameters . <img src=\"./images/myimage.png\" alt=\"My Image\" style=\"position: absolute; top: 20px; right: 20px; width: 350px; height: auto;\" /> Marp Image Filters These work on bg and regular images ![grayscale](./images/my_image.jpg) ![sepia](./images/my_image.jpg) ![blur](./images/my_image.jpg) ![opacity](./images/my_image.jpg) You can combine and parameterize them ![brightness:.75 sepia:50%](./images/my_image.jpg) videos Play video files on your computer <iframe width=\"100%\" height=\"100%\" src=\"./media/my_video_file.mp4\"> </iframe> Play youtube videos <iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/EzQ-p41wNEE\"> </iframe> columnate-content If you want to columnate you content with equal columns, this is the section for you! Text on Right, Image on Left Note: Image size is in inches, you could also use px to specify size in pixels. # Two Cols, one pic, one text - One - Two - Three - Four ![bg right width:4in](images/my_image.jpg) Text on Left, Image on Right Two Columns with a 50/50 Split # Two Cols, one pic, one text - One - Two - Three - Four ![bg left width:4in](images/my_image.jpg) Text (or whatever) on both sides Make sure you have a space between the HTML tags and markdown content! Two Columns with 50/50 Split <div class=\"two_columns\"> <div> - aa - bb - cc </div> <div> - 1 - 2 - 3 An Image:<br/> ![w:240](./images/my_image.jpg) </div> </div> Three Columns Three Columns with 33/33/33 Split - aa - bb - cc - a - b - c - x - y - z Two Columns, but with Unequal Columns For a Two-Column 60/40 Split: <div class=\"two_columns_60_40\"> <div> ![](./images/my_image.jpg) </div> <div> - a - b - c </div> </div> For a Two-Column 70/30 Split: <div class=\"two_columns_70_30\"> <div> ![](./images/my_image.jpg) </div> <div> - a - b - c </div> </div> For arbritrary Two-Column Splits Using an Image one One Side and Text On Another - The Text I Want On The Right - More Rightside Text ![bg left:35%](./images/my_image.jpg) <!-- the text will take up the remaining space! --> You can also use the bg directive to divy up slide into two unequal columns: ![bg left:33%](./images/my_image.jpg) slide-links [Jump to Slide 2](#2) NOTE: You don't have to do anything on slide 2, Marp will automatically make the link for you. Now when you're viewing your slides, you just click the link and you will jump to that slide. override-slide-defaults If you want to change the default background and/or foreground for an individual slide, use these directives within a slide: <!--_backgroundColor: black--> <!--_color: red--> override-presentation-defaults Put this at the top of the first slide. This will only change the tags you override. I think :root changed the default text. <style> :root { --color-background: #101010; --color-foreground: #f9f06b; } h1 { font-family: Courier New; } </style> fit-text-width If you want to make some text fill up the slide, use this: <!--fit-->Huge Text!! styling-color This is some **bold** text. This is some <span style=\"color:yellow\"><u>underlined</u></span> text. <span style=\"color:orange\">This text is all orange</span> styling-font Keep a space between the span tags and the markdown list <span style=\"font-size: 28px\"> - this is a ine of **bulleted** text - this is another line - this markedth the third line - ok, this is enough! </span> mermaid-marp To add a Mermaid chart to your presentation, try the code below. NOTE: This works in a real web browser, so it should be good to go for your presentations. However, be aware that the letters aren't rendering correctly in the little Marp chrome preview window. NOTE: You can put the last 3 lines at the top of your first slide for presentation wide Mermaid use. Otherwise, if it's just for one slide, you could use as shown. <!-- mermaid.js --> <script src=\"https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js\"></script> <script>mermaid.initialize({startOnLoad:true});</script> <div class=\"mermaid\"> graph TD; A-->B; A-->C; B-->D; C-->D; </div> You can position diagrams using absolute coordinates and/or alter the bounding box like this: <div class=\"mermaid\" style=\"position: absolute; top: 20px; right: 20px; width: 350px; height: auto;\"> graph TD; A-->B; A-->C; B-->D; C-->D; </div> You can style nodes by creating a style for the node you'd like to style: <div class=\"mermaid\"> graph TD; Node1-->Node2 Node1-->Node3 Node1-->Node4 style Node4 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5 </div> Unfortunately, this ^^^ styling renders correctly for me in the preview, but NOT in Firefox!? By default, Mermaid diagrams can be small. You can put something like this in the Marp frontmatter section to adjust Mermaid diagram size: svg[id^=\"mermaid-\"] { min-width: 480px; max-width: 960px; min-height: 360px; max-height: 600px; } WARNING : Mermaid doesn't work completely as expected in the Marp preview window.. If you want to preview Mermaid diagrams, drag slides.html to a real browser! Even If You Do , Mermaid diagrams still won't look as is should, though they will be readable. You have been warned! plotly-marp To add a Plotly graph to your presentation, try the code below. NOTE: You can put the first 3 lines at the top of your first slide for presentation wide Plotly use. Otherwise, if it's just for one slide, you could use as shown. <!-- Import Plotly dependencies --> --- <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script> <link rel=\"stylesheet\" href=\"https://cdn.plot.ly/plotly-1.58.4.min.css\" /> # Rate of Learning (Total Time Hypothesis) <div id=\"my-graph\"></div> <style scoped> .plotly-graph-container { margin-top: 0; padding-top: 0; } </style> <script> // JavaScript code to create a Plotly graph var data = [ { x: [7.5, 20], y: [64, 8], type: 'scatter', line: {width: 4}, marker: {size: 10} } ]; var layout = { yaxis: { title: {text: \"# Repetitions on Day 1\", font: {size: 24}}, autorange: 'reversed', range: [72, 0], tickvals: [0, 8, 16, 24, 32, 40, 48, 56, 64, 72] }, xaxis: { title: {text: \"Relearn Time on Day 2 (minutes)\", font: {size: 24}}, range: [0, 25], dtick: 5 }, margin: {t: 0, r: 0} // set top & right margins to 0 }; // Plotly.newPlot('my-graph', data, layout); </script> --- The above example is a little odd given it's reversed y-axis. Here is a slightly more conventional graph: --- <div id=\"plotly-graph\"></div> <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script> <script> // Sample data const x = [1, 2, 3, 4, 5]; const y = [10, 15, 13, 17, 20]; // Create the Plotly graph const trace = { x: x, y: y, mode: 'lines+markers', type: 'scatter', }; const data = [trace]; const layout = { title: 'My Plotly Line Graph', xaxis: { title: 'X-axis' }, yaxis: { title: 'Y-axis' }, }; Plotly.newPlot('plotly-graph', data, layout); </script> --- useful-websites CommonMark Markdown Syntax https://commonmark.org/help/ Marp Documentation https://marpit.marp.app/markdown","title":"Marp Stuff"},{"location":"marp_stuff/#my-marp-faq","text":"What is Marp? How do you install Marp? My Marp Workflow What is Marp2PDF? Header Slides Images Videos Putting Content Into Columns Linking Slides Override Presentation Defaults Override Slide Defaults Fit Text To Slide Width Change Word or Phrase Color Change Word or Phrase Size Using Mermaid Diagrams With Marp Using Plotly Graphs With Marp Useful Websites","title":"My MARP FAQ"},{"location":"marp_stuff/#what-is-marp","text":"| Marp (also known as the Markdown Presentation Ecosystem) provides an intuitive experience for creating beautiful slide decks. You only have to focus on writing your story in a Markdown document. I use Marp instead of Powerpoint to create presenations I use in lectures, talks, and tutorials. If you're a coder or otherwise comfortable with creating documents with plaintext (especially Markdown), then this might be for you. However, for most people, using PowerPoint or some other presenetaiton software package will be faaar easier! An easy way to get started is to use Marp via VSCode or VSCodium , but I use Marp CLI with PyCharm . Quick Overview Video: https://www.youtube.com/watch?v=EzQ-p41wNEE More about Marp Here: https://marp.app/ Quick video","title":"what-is-marp"},{"location":"marp_stuff/#installing-marp","text":"","title":"installing-marp"},{"location":"marp_stuff/#basic-setup","text":"If you want to use Marp with VSCode or VSCodium , you can find it in the normal VSCode marketplace, e.g.: Marp for VS Code If you want to use Marp with another editor or IDE (I use PyCharm becasue I already use it frequently for Python development, otherwise I'd probably use VSCodium . This means that I use use Marp-CLI (i.e., the commandline interface). You can learn more more here: Marp-CLI By far the easiest way to install Marp is to use one of the standalone binaries from the marp-cli [Releases Page]. I recommend putting the resulting Marp executable somewhere in your system Path. NOTE that if you instead use pip or npx to install Marp, it may already be on your path. Use the Marp-CLI instructions for info on how to get to the point where you can run Marp from anywhere on your system.","title":"Basic Setup"},{"location":"marp_stuff/#setup-chrome-browser-for-rendering","text":"The Marp-CLI page discusses how to make sure you have chrome setup for rendering. On Ubuntu Linux (actually, I use Pop!_OS , an OS by system76 based on Ubuntu), I used these instructions: sudo add-apt-repository ppa:savoury1/chromium sudo apt update sudo apt install chromium-browser export CHROME_PATH=/usr/bin/chromium-browser","title":"Setup Chrome Browser for Rendering"},{"location":"marp_stuff/#marp-cli-workflow","text":"","title":"marp-cli-workflow"},{"location":"marp_stuff/#setup","text":"","title":"Setup"},{"location":"marp_stuff/#for-each-new-slideshow","text":"create a new folder to hold the slideshow create 2 subfloders, \"images\" and \"media\" create a markdown file called \"slides.md\" create a batch file called dev.sh (mac or linux, dev.bat on windows??) and make it executable. create a batch file called make_pdf.sh (mak or linux, make_pdf.sh on windows??) and make it executable.","title":"For each new slideshow:"},{"location":"marp_stuff/#boilerplate-for-the-top-of-slidesmd","text":"--- marp: true theme: gaia # default, uncover, gaia class: invert # invert for dark mode of any theme math: mathjax footer: \"\" /* @@@@@@@@@@ You could put whatever text you want at the bottom of each slide @@@@@@@@@@@ */ html: true size: 4:3 # 16:9 4:3 etc. style: | .two_columns { display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 1rem; } .two_columns_60_40 { display: grid; grid-template-columns: 60% 40%; gap: 1rem; } .two_columns_70_30 { display: grid; grid-template-columns: 70% 30%; gap: 1rem; } .three_columns { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); gap: 1rem; } /* make sure there are spaces above and below the content, e.g.: <div class=\"centerit\"> [w:480px]('./images/my_image.png') </div> */ .centerit { display: flex; justify-content: center; align-items: center; height: 100vh; } /* small font bulleted list */ .small_list ul { font-size: 22px; } /* Watermark (after=off, before=on)*/ section::after { position: absolute; display: flex; /* Copyright text */ content: \".\"; /* @@@@@@@@@@ You could put copyright info here, or use image below @@@@@@@@@@@ */ font-size: 20px; color: #C0C0C0; padding-left: 1980px; align-items: center; /* Position and size */ left: 30px; bottom: 200px; height: 350px; /* Watermark image no-repeat or repeat */ /* THIS WILL ONLY SHOW UP IF YOU SET \"section::before\" above. to disble, use \"section::after\" */ background: url(\"./images/watermark2.png\") repeat; /* @@@@@@@@@@ I have my copyright info in this watermark image @@@@@@@@@@@ */ opacity: 0.4; /* Allow to control elements under the wa termark */ pointer-events: none; } ---","title":"Boilerplate for the top of slides.md"},{"location":"marp_stuff/#contents-of-devsh","text":"NOTE: This may need to be adjusted for Windows. NOTE: This may need to be adjusted on Macos if you are not using bash. #!/bin/bash marp -w -p --html slides.md","title":"Contents of dev.sh"},{"location":"marp_stuff/#contents-of-make_pdfsh","text":"NOTE: This may need to be adjusted for Windows. NOTE: This may need to be adjusted on Macos if you are not using bash. #!/bin/bash export CHROME_PATH=/usr/bin/chromium-browser marp --pdf --html --output=. --input-dir=. --allow-local-files # marp2pdf","title":"Contents of make_pdf.sh"},{"location":"marp_stuff/#development-workflow","text":"NOTE: the command in dev.sh will automatically re-create slides.html from your slides.md file (that's what the -w flag does). It will also render the current slideshow in a little window so you can see what you are doing (that's what the -p flag does). Here is my workflow: run ./dev.sh Make a change to slides.md Whenever I want to see what I've done in the preview window, I save the file (or enable auto-save for continous updates) If I want to see a full-size version in a webbrowser, I drag slides.html to my webbrowser (I use Firefox ), but I have to refresh to see any subsequent changes (which is why I prefer to use the preview window). To include images, I save them to the images folder and then refer to them as something like ./images/imagename.png To include videos, I save them to the media folder then refer to them as something like ./media/videoname.mp4 When donw editing, I cancel out of the process running ./dev.sh (e.g., using CTRL-C). To create a PDF, I run ./make_pdf.sh That's it. Making changes to my slides is as easy as editing the text in slides.md .","title":"Development Workflow"},{"location":"marp_stuff/#using-my-presentations","text":"Marp renders your markdown presentation code into a working static HTML presentation. Thus, to show your presentation, just drag slides.html into your browser! I do the following: Drag slides.html into Firefox Click the Presenter's View Icon on the right side of the slide navigation bar at the bottom, which creates another webpage showing the presenter's view. I keep the presenter's view page on the primary monitor where I can see it and I drag the normal presentation window onto the external monitor so the audiene can see it. moving around in presenter's view automatically controls the audience view. Note: To show videos, you have to press start/stop/etc. on the normal presentation window. When done, just close the slideshow browser tabs and you're done.","title":"Using My Presentations"},{"location":"marp_stuff/#what-is-marp-to-pdf","text":"In the My Marp Workflow section, the make_pdf.sh contents has a command called marp2pdf that is commented out. What is this? Marp2PDF is a tool I wrote which does the following: looks for the file slides.md and makes a temporary copy of it edits the copy to remove any image markup that is followed with this text: <!-- nopdf --> in the watermark subsection of the style frontmatter, replaces the text section::after with section::before uses Marp-cli to re-render this temp file to slides_public.pdf uses ghostscript to do a medium-level image compressed version of the content in slides_public.pdf and saves it using the same name. The result is a considerably smaller PDF that has my watermark image repated across it and that omits images I think would be inappropriate for a public copy (e.g., copyrighted images, etc.). All of this occurs without altering either the original slides.md or the standard slides.pdf generated by Marp. Marp2PDF assumes the following: chromium-browser is installed (e.g., mine is installed at /usr/bin/chromium-browser ) ghostscript is installed (e.g., mine is installed at /usr/bin/gs ) marp-cli is installed (e.g., mine is installed at /home/[USERNAME]/Applications/marp ) Why is marp2pdf commented out in make_pdf.sh ? That's because it's not yet available publically. When it is, I'll adjust the relevant FAQs. For now, you can just use the default PDF Marp produces, or make the changes I indicated above yourself and then regenerate the PDF.","title":"what-is-marp-to-pdf"},{"location":"marp_stuff/#header-slides","text":"I like headers largeish text over a full-slide images: ![bg](images/fullslide_background_image.png) <!-- nopdf --> # <span style=\"color:orange\"><!--fit-->My Main Title</span> ## <center>My Subtitle If Needed</center> ### <center>For Lectures, I include Course, Quarter and Year</center>","title":"header-slides"},{"location":"marp_stuff/#images","text":"","title":"images"},{"location":"marp_stuff/#plain-markdown-image-spec","text":"![](./images/myimage.jpg)","title":"Plain markdown image spec:"},{"location":"marp_stuff/#with-width-specified-in-pixels-height-will-be-auto-computed","text":"![w:800px](./images/myimage.jpg)","title":"With width specified in pixels (height will be auto-computed)"},{"location":"marp_stuff/#centered","text":"Note: spaces between div tags and markdown is crucial! <div class=\"centerit\"> ![w:800px](./images/myimage.jpg) </div>","title":"Centered"},{"location":"marp_stuff/#absolute-positioning","text":"This allows you to place an image anywhere on the slide! Make sure you adjust the top, right, width, and height parameters . <img src=\"./images/myimage.png\" alt=\"My Image\" style=\"position: absolute; top: 20px; right: 20px; width: 350px; height: auto;\" />","title":"Absolute positioning"},{"location":"marp_stuff/#marp-image-filters","text":"These work on bg and regular images ![grayscale](./images/my_image.jpg) ![sepia](./images/my_image.jpg) ![blur](./images/my_image.jpg) ![opacity](./images/my_image.jpg) You can combine and parameterize them ![brightness:.75 sepia:50%](./images/my_image.jpg)","title":"Marp Image Filters"},{"location":"marp_stuff/#videos","text":"","title":"videos"},{"location":"marp_stuff/#play-video-files-on-your-computer","text":"<iframe width=\"100%\" height=\"100%\" src=\"./media/my_video_file.mp4\"> </iframe>","title":"Play video files on your computer"},{"location":"marp_stuff/#play-youtube-videos","text":"<iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/EzQ-p41wNEE\"> </iframe>","title":"Play youtube videos"},{"location":"marp_stuff/#columnate-content","text":"If you want to columnate you content with equal columns, this is the section for you!","title":"columnate-content"},{"location":"marp_stuff/#text-on-right-image-on-left","text":"Note: Image size is in inches, you could also use px to specify size in pixels. # Two Cols, one pic, one text - One - Two - Three - Four ![bg right width:4in](images/my_image.jpg)","title":"Text on Right, Image on Left"},{"location":"marp_stuff/#text-on-left-image-on-right","text":"Two Columns with a 50/50 Split # Two Cols, one pic, one text - One - Two - Three - Four ![bg left width:4in](images/my_image.jpg)","title":"Text on Left, Image on Right"},{"location":"marp_stuff/#text-or-whatever-on-both-sides","text":"Make sure you have a space between the HTML tags and markdown content! Two Columns with 50/50 Split <div class=\"two_columns\"> <div> - aa - bb - cc </div> <div> - 1 - 2 - 3 An Image:<br/> ![w:240](./images/my_image.jpg) </div> </div>","title":"Text (or whatever) on both sides"},{"location":"marp_stuff/#three-columns","text":"Three Columns with 33/33/33 Split - aa - bb - cc - a - b - c - x - y - z","title":"Three Columns"},{"location":"marp_stuff/#two-columns-but-with-unequal-columns","text":"For a Two-Column 60/40 Split: <div class=\"two_columns_60_40\"> <div> ![](./images/my_image.jpg) </div> <div> - a - b - c </div> </div> For a Two-Column 70/30 Split: <div class=\"two_columns_70_30\"> <div> ![](./images/my_image.jpg) </div> <div> - a - b - c </div> </div> For arbritrary Two-Column Splits Using an Image one One Side and Text On Another - The Text I Want On The Right - More Rightside Text ![bg left:35%](./images/my_image.jpg) <!-- the text will take up the remaining space! --> You can also use the bg directive to divy up slide into two unequal columns: ![bg left:33%](./images/my_image.jpg)","title":"Two Columns, but with Unequal Columns"},{"location":"marp_stuff/#slide-links","text":"[Jump to Slide 2](#2) NOTE: You don't have to do anything on slide 2, Marp will automatically make the link for you. Now when you're viewing your slides, you just click the link and you will jump to that slide.","title":"slide-links"},{"location":"marp_stuff/#override-slide-defaults","text":"If you want to change the default background and/or foreground for an individual slide, use these directives within a slide: <!--_backgroundColor: black--> <!--_color: red-->","title":"override-slide-defaults"},{"location":"marp_stuff/#override-presentation-defaults","text":"Put this at the top of the first slide. This will only change the tags you override. I think :root changed the default text. <style> :root { --color-background: #101010; --color-foreground: #f9f06b; } h1 { font-family: Courier New; } </style>","title":"override-presentation-defaults"},{"location":"marp_stuff/#fit-text-width","text":"If you want to make some text fill up the slide, use this: <!--fit-->Huge Text!!","title":"fit-text-width"},{"location":"marp_stuff/#styling-color","text":"This is some **bold** text. This is some <span style=\"color:yellow\"><u>underlined</u></span> text. <span style=\"color:orange\">This text is all orange</span>","title":"styling-color"},{"location":"marp_stuff/#styling-font","text":"Keep a space between the span tags and the markdown list <span style=\"font-size: 28px\"> - this is a ine of **bulleted** text - this is another line - this markedth the third line - ok, this is enough! </span>","title":"styling-font"},{"location":"marp_stuff/#mermaid-marp","text":"To add a Mermaid chart to your presentation, try the code below. NOTE: This works in a real web browser, so it should be good to go for your presentations. However, be aware that the letters aren't rendering correctly in the little Marp chrome preview window. NOTE: You can put the last 3 lines at the top of your first slide for presentation wide Mermaid use. Otherwise, if it's just for one slide, you could use as shown. <!-- mermaid.js --> <script src=\"https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js\"></script> <script>mermaid.initialize({startOnLoad:true});</script> <div class=\"mermaid\"> graph TD; A-->B; A-->C; B-->D; C-->D; </div> You can position diagrams using absolute coordinates and/or alter the bounding box like this: <div class=\"mermaid\" style=\"position: absolute; top: 20px; right: 20px; width: 350px; height: auto;\"> graph TD; A-->B; A-->C; B-->D; C-->D; </div> You can style nodes by creating a style for the node you'd like to style: <div class=\"mermaid\"> graph TD; Node1-->Node2 Node1-->Node3 Node1-->Node4 style Node4 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5 </div> Unfortunately, this ^^^ styling renders correctly for me in the preview, but NOT in Firefox!? By default, Mermaid diagrams can be small. You can put something like this in the Marp frontmatter section to adjust Mermaid diagram size: svg[id^=\"mermaid-\"] { min-width: 480px; max-width: 960px; min-height: 360px; max-height: 600px; } WARNING : Mermaid doesn't work completely as expected in the Marp preview window.. If you want to preview Mermaid diagrams, drag slides.html to a real browser! Even If You Do , Mermaid diagrams still won't look as is should, though they will be readable. You have been warned!","title":"mermaid-marp"},{"location":"marp_stuff/#plotly-marp","text":"To add a Plotly graph to your presentation, try the code below. NOTE: You can put the first 3 lines at the top of your first slide for presentation wide Plotly use. Otherwise, if it's just for one slide, you could use as shown. <!-- Import Plotly dependencies --> --- <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script> <link rel=\"stylesheet\" href=\"https://cdn.plot.ly/plotly-1.58.4.min.css\" /> # Rate of Learning (Total Time Hypothesis) <div id=\"my-graph\"></div> <style scoped> .plotly-graph-container { margin-top: 0; padding-top: 0; } </style> <script> // JavaScript code to create a Plotly graph var data = [ { x: [7.5, 20], y: [64, 8], type: 'scatter', line: {width: 4}, marker: {size: 10} } ]; var layout = { yaxis: { title: {text: \"# Repetitions on Day 1\", font: {size: 24}}, autorange: 'reversed', range: [72, 0], tickvals: [0, 8, 16, 24, 32, 40, 48, 56, 64, 72] }, xaxis: { title: {text: \"Relearn Time on Day 2 (minutes)\", font: {size: 24}}, range: [0, 25], dtick: 5 }, margin: {t: 0, r: 0} // set top & right margins to 0 }; // Plotly.newPlot('my-graph', data, layout); </script> --- The above example is a little odd given it's reversed y-axis. Here is a slightly more conventional graph: --- <div id=\"plotly-graph\"></div> <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script> <script> // Sample data const x = [1, 2, 3, 4, 5]; const y = [10, 15, 13, 17, 20]; // Create the Plotly graph const trace = { x: x, y: y, mode: 'lines+markers', type: 'scatter', }; const data = [trace]; const layout = { title: 'My Plotly Line Graph', xaxis: { title: 'X-axis' }, yaxis: { title: 'Y-axis' }, }; Plotly.newPlot('plotly-graph', data, layout); </script> ---","title":"plotly-marp"},{"location":"marp_stuff/#useful-websites","text":"CommonMark Markdown Syntax https://commonmark.org/help/ Marp Documentation https://marpit.marp.app/markdown","title":"useful-websites"},{"location":"mkdocs_getting_started/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Other after mkdocs ghdeploy (currently using github actions) the site will live at https://<username>.github.io/<repo>/","title":"Welcome to MkDocs"},{"location":"mkdocs_getting_started/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs_getting_started/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"mkdocs_getting_started/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"mkdocs_getting_started/#other","text":"after mkdocs ghdeploy (currently using github actions) the site will live at https://<username>.github.io/<repo>/","title":"Other"},{"location":"setup_ssh_for_github/","text":"End-to-end setup to use SSH so PyCharm can push a project's changes to github. A) Create and load an SSH key (one-time) Generate a key (accept defaults unless you already have one): ssh-keygen -t ed25519 -C \"your_email@example.com\" # Press Enter for default path (~/.ssh/id_ed25519) # Optionally set a passphrase Start the agent and add your key: eval \"$(ssh-agent -s)\" ssh-add ~/.ssh/id_ed25519 If you set a passphrase, you\u2019ll be prompted once; your desktop keyring may remember it. Add the public key to GitHub: cat ~/.ssh/id_ed25519.pub Copy the whole line, then in GitHub: Settings \u2192 SSH and GPG keys \u2192 New SSH key \u2192 paste \u2192 Save. Test the auth: ssh -T git@github.com You should see a \u201cHi ! You\u2019ve successfully authenticated\u2026\u201d message. B) Point your local repo at the SSH URL In your project folder: git remote -v # if you see https://..., switch it to SSH: git remote set-url origin git@github.com:<USERNAME>/<REPO>.git git remote -v # confirm it shows git@github.com:... C) Configure PyCharm to use SSH Git executable : PyCharm \u2192 Settings/Preferences \u2192 Version Control \u2192 Git Ensure \u201cPath to Git executable\u201d points to your system git (PyCharm usually auto-detects). SSH handling : PyCharm \u2192 Settings/Preferences \u2192 Tools \u2192 SSH Configurations You usually don\u2019t need to add anything here; PyCharm uses your system OpenSSH by default. PyCharm \u2192 Settings/Preferences \u2192 Version Control \u2192 Git Make sure SSH executable is Native (not \u201cBuilt-in\u201d). Clear any old HTTPS login (so PyCharm stops prompting for a password/token): PyCharm \u2192 Settings/Preferences \u2192 Version Control \u2192 GitHub Remove any stored GitHub accounts tied to HTTPS. Map the project to Git (if not already): VCS \u2192 Enable Version Control Integration\u2026 \u2192 choose Git . Trust the GitHub host key (first time from inside PyCharm it may ask): If prompted \u201cDo you trust the host github.com?\u201d, accept. D) Push from PyCharm VCS \u2192 Commit \u2192 Commit and Push (or the Push action). If your SSH key has a passphrase and the agent/keyring isn\u2019t holding it yet, you\u2019ll get a prompt once. Common pitfalls & quick fixes Still seeing password prompts? Your remote is still HTTPS. Run: bash git remote -v git remote set-url origin git@github.com:<USERNAME>/<REPO>.git * Key not used / asks every time: Ensure the agent has the key: bash ssh-add -l # list keys loaded ssh-add ~/.ssh/id_ed25519 On Linux desktops, your keyring can auto-load keys on login. If not, add the eval \"$(ssh-agent -s)\" and ssh-add to your shell init or use your DE\u2019s keyring settings. * Multiple keys / multiple GitHub accounts: Use ~/.ssh/config : Host github.com HostName github.com User git IdentityFile ~/.ssh/id_ed25519 IdentitiesOnly yes * Permissions error: Make sure ~/.ssh is 700 and private key is 600 : bash chmod 700 ~/.ssh chmod 600 ~/.ssh/id_ed25519 That\u2019s it\u2014once the remote is SSH and your key is added, PyCharm pushes should \u201cjust work.\u201d If anything still blocks you, paste your git remote -v and the output of ssh -T git@github.com , and I\u2019ll zero in on it.","title":"Setup SSH for Github"},{"location":"setup_ssh_for_github/#end-to-end-setup-to-use-ssh-so-pycharm-can-push-a-projects-changes-to-github","text":"","title":"End-to-end setup to use SSH so PyCharm can push a project's changes to github."},{"location":"setup_ssh_for_github/#a-create-and-load-an-ssh-key-one-time","text":"Generate a key (accept defaults unless you already have one): ssh-keygen -t ed25519 -C \"your_email@example.com\" # Press Enter for default path (~/.ssh/id_ed25519) # Optionally set a passphrase Start the agent and add your key: eval \"$(ssh-agent -s)\" ssh-add ~/.ssh/id_ed25519 If you set a passphrase, you\u2019ll be prompted once; your desktop keyring may remember it. Add the public key to GitHub: cat ~/.ssh/id_ed25519.pub Copy the whole line, then in GitHub: Settings \u2192 SSH and GPG keys \u2192 New SSH key \u2192 paste \u2192 Save. Test the auth: ssh -T git@github.com You should see a \u201cHi ! You\u2019ve successfully authenticated\u2026\u201d message.","title":"A) Create and load an SSH key (one-time)"},{"location":"setup_ssh_for_github/#b-point-your-local-repo-at-the-ssh-url","text":"In your project folder: git remote -v # if you see https://..., switch it to SSH: git remote set-url origin git@github.com:<USERNAME>/<REPO>.git git remote -v # confirm it shows git@github.com:...","title":"B) Point your local repo at the SSH URL"},{"location":"setup_ssh_for_github/#c-configure-pycharm-to-use-ssh","text":"Git executable : PyCharm \u2192 Settings/Preferences \u2192 Version Control \u2192 Git Ensure \u201cPath to Git executable\u201d points to your system git (PyCharm usually auto-detects). SSH handling : PyCharm \u2192 Settings/Preferences \u2192 Tools \u2192 SSH Configurations You usually don\u2019t need to add anything here; PyCharm uses your system OpenSSH by default. PyCharm \u2192 Settings/Preferences \u2192 Version Control \u2192 Git Make sure SSH executable is Native (not \u201cBuilt-in\u201d). Clear any old HTTPS login (so PyCharm stops prompting for a password/token): PyCharm \u2192 Settings/Preferences \u2192 Version Control \u2192 GitHub Remove any stored GitHub accounts tied to HTTPS. Map the project to Git (if not already): VCS \u2192 Enable Version Control Integration\u2026 \u2192 choose Git . Trust the GitHub host key (first time from inside PyCharm it may ask): If prompted \u201cDo you trust the host github.com?\u201d, accept.","title":"C) Configure PyCharm to use SSH"},{"location":"setup_ssh_for_github/#d-push-from-pycharm","text":"VCS \u2192 Commit \u2192 Commit and Push (or the Push action). If your SSH key has a passphrase and the agent/keyring isn\u2019t holding it yet, you\u2019ll get a prompt once.","title":"D) Push from PyCharm"},{"location":"setup_ssh_for_github/#common-pitfalls-quick-fixes","text":"Still seeing password prompts? Your remote is still HTTPS. Run: bash git remote -v git remote set-url origin git@github.com:<USERNAME>/<REPO>.git * Key not used / asks every time: Ensure the agent has the key: bash ssh-add -l # list keys loaded ssh-add ~/.ssh/id_ed25519 On Linux desktops, your keyring can auto-load keys on login. If not, add the eval \"$(ssh-agent -s)\" and ssh-add to your shell init or use your DE\u2019s keyring settings. * Multiple keys / multiple GitHub accounts: Use ~/.ssh/config : Host github.com HostName github.com User git IdentityFile ~/.ssh/id_ed25519 IdentitiesOnly yes * Permissions error: Make sure ~/.ssh is 700 and private key is 600 : bash chmod 700 ~/.ssh chmod 600 ~/.ssh/id_ed25519 That\u2019s it\u2014once the remote is SSH and your key is added, PyCharm pushes should \u201cjust work.\u201d If anything still blocks you, paste your git remote -v and the output of ssh -T git@github.com , and I\u2019ll zero in on it.","title":"Common pitfalls &amp; quick fixes"},{"location":"swap_docker_for_podman/","text":"Swap Docker For Podman on Fedora 39-42 : 0. Cleanup Podman Force remove all containers: podman rm -a -f Force remove all pods: podman pod rm -a -f Force remove all images: podman rmi -a -f Force remove all podman machines and reset: podman machine reset -f 1. Remove Podman (and its shims) sudo dnf remove -y podman podman-docker podman-compose podman = engine itself podman-docker = the \u201cshim\u201d that makes /usr/bin/docker call Podman podman-compose = Podman\u2019s alternative Compose tool This ensures no \u201cfake docker\u201d commands get in your way. 2. Add Docker\u2019s official repo Fedora doesn\u2019t ship Docker CE anymore, so grab Docker\u2019s maintained repo: # set up the repo sudo dnf -y install dnf-plugins-core sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo 3. Install Docker CE and plugins (includes Compose v2) sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-compose-plugin gives you docker compose \u2026 (v2, built into the docker CLI). No need for the old docker-compose Python package. 4. Enable & start Docker sudo systemctl enable --now docker 5. Add your user to the docker group (optional, avoids sudo ) sudo usermod -aG docker $USER newgrp docker # refresh group membership in current shell 6. Test it docker --version docker compose version docker run hello-world You should see Docker CE\u2019s version info and a successful \u201cHello from Docker!\u201d run. At this point: Podman is gone. You have the real Docker engine + socket at /var/run/docker.sock . docker and docker compose commands will behave exactly as WinBoat (or any Docker-dependent app) expects. --- Undo the above and go back to Fedora\u2019s Podman-first setup.: 1. Stop and remove Docker sudo systemctl disable --now docker sudo dnf remove -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin That clears out Docker CE and its supporting runtime bits. 2. Re-install Podman + extras sudo dnf install -y podman podman-docker podman-compose podman \u2192 main engine podman-docker \u2192 provides /usr/bin/docker shim (so docker run \u2026 maps to podman run \u2026 ) podman-compose \u2192 lets you run podman-compose up with docker-compose.yml files 3. (Optional) Enable Docker-compat socket for Podman If you want tools like Compose v2 to talk to Podman as if it were Docker: systemctl --user enable --now podman.socket export DOCKER_HOST=unix:///run/user/$UID/podman/podman.sock (You can drop that export into ~/.bashrc or ~/.zshrc if you want it permanent.) 4. Verify Podman is back podman --version docker --version # now points to Podman if podman-docker is installed podman run hello-world","title":"Swapt Docker 4 Podman"},{"location":"swap_docker_for_podman/#swap-docker-for-podman-on-fedora-39-42","text":"","title":"Swap Docker For Podman on Fedora 39-42:"},{"location":"swap_docker_for_podman/#0-cleanup-podman","text":"Force remove all containers: podman rm -a -f Force remove all pods: podman pod rm -a -f Force remove all images: podman rmi -a -f Force remove all podman machines and reset: podman machine reset -f","title":"0. Cleanup Podman"},{"location":"swap_docker_for_podman/#1-remove-podman-and-its-shims","text":"sudo dnf remove -y podman podman-docker podman-compose podman = engine itself podman-docker = the \u201cshim\u201d that makes /usr/bin/docker call Podman podman-compose = Podman\u2019s alternative Compose tool This ensures no \u201cfake docker\u201d commands get in your way.","title":"1. Remove Podman (and its shims)"},{"location":"swap_docker_for_podman/#2-add-dockers-official-repo","text":"Fedora doesn\u2019t ship Docker CE anymore, so grab Docker\u2019s maintained repo: # set up the repo sudo dnf -y install dnf-plugins-core sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo","title":"2. Add Docker\u2019s official repo"},{"location":"swap_docker_for_podman/#3-install-docker-ce-and-plugins-includes-compose-v2","text":"sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-compose-plugin gives you docker compose \u2026 (v2, built into the docker CLI). No need for the old docker-compose Python package.","title":"3. Install Docker CE and plugins (includes Compose v2)"},{"location":"swap_docker_for_podman/#4-enable-start-docker","text":"sudo systemctl enable --now docker","title":"4. Enable &amp; start Docker"},{"location":"swap_docker_for_podman/#5-add-your-user-to-the-docker-group-optional-avoids-sudo","text":"sudo usermod -aG docker $USER newgrp docker # refresh group membership in current shell","title":"5. Add your user to the docker group (optional, avoids sudo)"},{"location":"swap_docker_for_podman/#6-test-it","text":"docker --version docker compose version docker run hello-world You should see Docker CE\u2019s version info and a successful \u201cHello from Docker!\u201d run. At this point: Podman is gone. You have the real Docker engine + socket at /var/run/docker.sock . docker and docker compose commands will behave exactly as WinBoat (or any Docker-dependent app) expects.","title":"6. Test it"},{"location":"swap_docker_for_podman/#-","text":"","title":"---"},{"location":"swap_docker_for_podman/#undo-the-above-and-go-back-to-fedoras-podman-first-setup","text":"","title":"Undo the above and go back to Fedora\u2019s Podman-first setup.:"},{"location":"swap_docker_for_podman/#1-stop-and-remove-docker","text":"sudo systemctl disable --now docker sudo dnf remove -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin That clears out Docker CE and its supporting runtime bits.","title":"1. Stop and remove Docker"},{"location":"swap_docker_for_podman/#2-re-install-podman-extras","text":"sudo dnf install -y podman podman-docker podman-compose podman \u2192 main engine podman-docker \u2192 provides /usr/bin/docker shim (so docker run \u2026 maps to podman run \u2026 ) podman-compose \u2192 lets you run podman-compose up with docker-compose.yml files","title":"2. Re-install Podman + extras"},{"location":"swap_docker_for_podman/#3-optional-enable-docker-compat-socket-for-podman","text":"If you want tools like Compose v2 to talk to Podman as if it were Docker: systemctl --user enable --now podman.socket export DOCKER_HOST=unix:///run/user/$UID/podman/podman.sock (You can drop that export into ~/.bashrc or ~/.zshrc if you want it permanent.)","title":"3. (Optional) Enable Docker-compat socket for Podman"},{"location":"swap_docker_for_podman/#4-verify-podman-is-back","text":"podman --version docker --version # now points to Podman if podman-docker is installed podman run hello-world","title":"4. Verify Podman is back"},{"location":"uninstall_snap/","text":"NOTICE SEPT 2025: I'm no longer removing snapd. I just ignore it and avoid any app that is snap only. The reason is fear that I make break the upgrade to the next LTS release. Instead, I uninstall the snap version of firefox, and then reinstall it properly: sudo snap remove --purge firefox sudo add-apt-repository ppa:mozillateam/ppa sudo apt update sudo apt install firefox Here\u2019s how you can completely remove snap from Ubuntu. WARNING: This will break some default apps (like Firefox on newer Ubuntu releases) since they are shipped as snaps. You may need to reinstall replacements from the official apt repositories or PPAs. 1. First, install and load a temporary desktop environment install the lxqt desktop sudo apt install lxqt reboot At the login window click your name, and then in the gear at the bottom right corner, choose lxqt. complete the following steps from lxqt... 2. Remove snapd and installed snaps # List all snaps snap list # Remove all snaps (do them one by one, starting with dependencies) sudo snap remove --purge firefox sudo snap remove --purge snap-store sudo snap remove --purge gnome-3-* sudo snap remove --purge gtk-common-themes sudo snap remove --purge core* # ...repeat until `snap list` is empty (some won't go, that's ok -- ignore snapd itself) # ...note, this includes gnome* # Finally, remove snapd itself sudo apt purge --autoremove snapd -y 3. Remove leftover directories sudo rm -rf /var/cache/snapd/ rm -rf ~/snap 4. Block snapd from being reinstalled automatically Ubuntu sometimes reinstalls snapd as a dependency. To prevent this: sudo apt-mark hold snapd Or add a preference rule: sudo nano /etc/apt/preferences.d/nosnap.pref Put this inside: Package: snapd Pin: release a=* Pin-Priority: -10 Save and exit. 6. Reinstall Ubuntu and Any Other Desired Desktops Reinstall Ubuntu Desktop, even if you don't plan to use it right now sudo apt install ubuntu-desktop [Optional] Install Other Dekstops. If You Prefer the Full Stock GNOME Desktop sudo apt install gnome If you're coming from Linux Mint, you may be more happy with Cinnamon sudo apt install cinnamon I personally use KDE Plasma sudo apt install kde-plasma-desktop # For the meta package (WARRNING: INSTALLS ALL KDE KUBUNTU APPS!!): # sudo apt install kubuntu-desktop I Sometimes Install the ENTIRE KDE Plasma Suite (HUGE) # WARNING: This meta-package installs lots of stuff: sudo apt install kubuntu-desktop Others etc... 6. Reload Your Preferred Desktop I use GNOME, so I loaded GNOME with Wayland , but if you want to go back to the normal Ubuntu flavor of GNOME, just load Ubuntu Desktop . 7. (Optional) Reinstall APT versions of apps Some apps (like Firefox) need to be reinstalled from the official Ubuntu repositories or PPAs: sudo add-apt-repository ppa:mozillateam/ppa sudo apt update sudo apt install firefox At this point, snap should be completely removed and prevented from coming back .","title":"Uninstall Snap"},{"location":"uninstall_snap/#heres-how-you-can-completely-remove-snap-from-ubuntu","text":"WARNING: This will break some default apps (like Firefox on newer Ubuntu releases) since they are shipped as snaps. You may need to reinstall replacements from the official apt repositories or PPAs.","title":"Here\u2019s how you can completely remove snap from Ubuntu."},{"location":"uninstall_snap/#1-first-install-and-load-a-temporary-desktop-environment","text":"install the lxqt desktop sudo apt install lxqt reboot At the login window click your name, and then in the gear at the bottom right corner, choose lxqt. complete the following steps from lxqt...","title":"1. First, install and load a temporary desktop environment"},{"location":"uninstall_snap/#2-remove-snapd-and-installed-snaps","text":"# List all snaps snap list # Remove all snaps (do them one by one, starting with dependencies) sudo snap remove --purge firefox sudo snap remove --purge snap-store sudo snap remove --purge gnome-3-* sudo snap remove --purge gtk-common-themes sudo snap remove --purge core* # ...repeat until `snap list` is empty (some won't go, that's ok -- ignore snapd itself) # ...note, this includes gnome* # Finally, remove snapd itself sudo apt purge --autoremove snapd -y","title":"2. Remove snapd and installed snaps"},{"location":"uninstall_snap/#3-remove-leftover-directories","text":"sudo rm -rf /var/cache/snapd/ rm -rf ~/snap","title":"3. Remove leftover directories"},{"location":"uninstall_snap/#4-block-snapd-from-being-reinstalled-automatically","text":"Ubuntu sometimes reinstalls snapd as a dependency. To prevent this: sudo apt-mark hold snapd Or add a preference rule: sudo nano /etc/apt/preferences.d/nosnap.pref Put this inside: Package: snapd Pin: release a=* Pin-Priority: -10 Save and exit.","title":"4. Block snapd from being reinstalled automatically"},{"location":"uninstall_snap/#6-reinstall-ubuntu-and-any-other-desired-desktops","text":"Reinstall Ubuntu Desktop, even if you don't plan to use it right now sudo apt install ubuntu-desktop [Optional] Install Other Dekstops.","title":"6. Reinstall Ubuntu and Any Other Desired Desktops"},{"location":"uninstall_snap/#if-you-prefer-the-full-stock-gnome-desktop","text":"sudo apt install gnome","title":"If You Prefer the Full Stock GNOME Desktop"},{"location":"uninstall_snap/#if-youre-coming-from-linux-mint-you-may-be-more-happy-with-cinnamon","text":"sudo apt install cinnamon","title":"If you're coming from Linux Mint, you may be more happy with Cinnamon"},{"location":"uninstall_snap/#i-personally-use-kde-plasma","text":"sudo apt install kde-plasma-desktop # For the meta package (WARRNING: INSTALLS ALL KDE KUBUNTU APPS!!): # sudo apt install kubuntu-desktop","title":"I personally use KDE Plasma"},{"location":"uninstall_snap/#i-sometimes-install-the-entire-kde-plasma-suite-huge","text":"# WARNING: This meta-package installs lots of stuff: sudo apt install kubuntu-desktop","title":"I Sometimes Install the ENTIRE KDE Plasma Suite (HUGE)"},{"location":"uninstall_snap/#others","text":"etc...","title":"Others"},{"location":"uninstall_snap/#6-reload-your-preferred-desktop","text":"I use GNOME, so I loaded GNOME with Wayland , but if you want to go back to the normal Ubuntu flavor of GNOME, just load Ubuntu Desktop .","title":"6. Reload Your Preferred Desktop"},{"location":"uninstall_snap/#7-optional-reinstall-apt-versions-of-apps","text":"Some apps (like Firefox) need to be reinstalled from the official Ubuntu repositories or PPAs: sudo add-apt-repository ppa:mozillateam/ppa sudo apt update sudo apt install firefox At this point, snap should be completely removed and prevented from coming back .","title":"7. (Optional) Reinstall APT versions of apps"},{"location":"vmware_stuff/","text":"VMWare Stuff Current version 17.6.3 Obtaining Installer I go to support.broadcom.com and download the installer. Current ones I have: VMware-Workstation-Full-16.2.5-20904516.x86_64.bundle VMware-Workstation-Full-17.5.2-23775571.x86_64.bundle VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle VMware-Workstation-Full-17.6.2-24409262.x86_64.bundle VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle Install Convert bundle to be executable chmod +x VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle Run installer sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle Uninstall sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle --uninstall-product vmware-workstation What to do when kernel modules wont' compile assumes hat mkubecek has the ones you need E.g.: git clone https://github.com/mkubecek/vmware-host-modules.git -b workstation-17.5.2 cd vmware-host-modules make sudo make install sudo systemctl restart vmware","title":"VMWare Workstation Notes"},{"location":"vmware_stuff/#vmware-stuff","text":"Current version 17.6.3","title":"VMWare Stuff"},{"location":"vmware_stuff/#obtaining-installer","text":"I go to support.broadcom.com and download the installer. Current ones I have: VMware-Workstation-Full-16.2.5-20904516.x86_64.bundle VMware-Workstation-Full-17.5.2-23775571.x86_64.bundle VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle VMware-Workstation-Full-17.6.2-24409262.x86_64.bundle VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle","title":"Obtaining Installer"},{"location":"vmware_stuff/#install","text":"Convert bundle to be executable chmod +x VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle Run installer sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle","title":"Install"},{"location":"vmware_stuff/#uninstall","text":"sudo ./VMware-Workstation-Full-17.6.3-24583834.x86_64.bundle --uninstall-product vmware-workstation","title":"Uninstall"},{"location":"vmware_stuff/#what-to-do-when-kernel-modules-wont-compile","text":"assumes hat mkubecek has the ones you need E.g.: git clone https://github.com/mkubecek/vmware-host-modules.git -b workstation-17.5.2 cd vmware-host-modules make sudo make install sudo systemctl restart vmware","title":"What to do when kernel modules wont' compile"}]}